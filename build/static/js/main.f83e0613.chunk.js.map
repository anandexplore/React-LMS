{"version":3,"sources":["assets/lp.png","Components/Firebase/context.js","Components/Firebase/firebase.js","Components/Firebase/index.js","Components/Login/LoginForm.js","Components/Session/context.js","Components/Navbar/TopNavBar.js","Components/Session/withAuthentication.js","Components/Session/withAuthorization.js","Components/Login/index.js","Components/Courses/CourseShowcase.js","Components/Courses/Context/withCourse.js","Components/LandingPage/HomePage.js","Components/Signup/SignupForm.js","Components/Signup/index.js","Components/Announcements/AnnouncementsPanel.js","Components/Signout/SignOutButton.js","Components/Navbar/SideNavigation.js","Components/Templates/MainTemplate.js","Components/Dashboard/MainPalette/AdminCoursePalette.js","Components/Dashboard/MainPalette/StudentCoursePalette.js","Components/Dashboard/MainPalette/CoursePanel.js","Components/Dashboard/index.js","Components/Courses/AddCourses/Body.js","Components/Courses/AddCourses/index.js","Components/Courses/EditCourses/Body.js","Components/Courses/EditCourses/index.js","Components/Courses/CoursePage/Curriculum/CurriculumModal.js","Components/Courses/CoursePage/Assignment/AssignmentModal.js","Components/Courses/CoursePage/Body.js","Components/Courses/CoursePage/index.js","Components/Courses/CoursePage/Curriculum/withCurriculum.js","Components/Courses/CoursePage/Curriculum/CurriculumPage.js","Components/Announcements/AddAnnouncement/index.js","Components/Announcements/AddAnnouncement/Body.js","Components/Courses/AllCourses/Body.js","Components/Courses/AllCourses/index.js","Components/Courses/CoursePage/Assignment/withAssignment.js","Components/Courses/CoursePage/Assignment/AssignmentPage.js","Components/Courses/CoursePage/Assignment/AdminSubmission/Body.js","Components/Courses/CoursePage/Assignment/AdminSubmission/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","FirebaseContext","React","createContext","withFirebase","Component","props","Consumer","firebase","config","apiKey","process","REACT_APP_API_KEY","authDomain","REACT_APP_AUTH_DOMAIN","databaseURL","REACT_APP_DATABASE_URL","projectId","REACT_APP_PROJECT_ID","storageBucket","REACT_APP_STORAGE_BUCKET","messagingSenderId","REACT_APP_MESSAGING_SENDER_ID","appId","REACT_APP_APP_ID","Firebase","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","Alert","success","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","user","uid","db","ref","users","course","cid","courses","courseCurriculums","assignments","assignmentRef","storage","child","onAuthUserListener","next","fallback","onAuthStateChanged","authUser","on","snapshot","dbUser","val","roles","onAuthCourseListener","prevChildKey","coursesObject","coursesList","Object","keys","map","key","app","initializeApp","this","database","INITIAL_STATE","error","LoginForm","state","errorPlacement","showEmailError","showPasswordError","isFormSubmit","formSubmit","bind","e","then","setState","history","push","catch","message","preventDefault","emailErrorMessage","passwordErrorMessage","isInvalid","Form","fluid","layout","onChange","formValue","FormGroup","ControlLabel","FormControl","name","errorMessage","style","type","position","margin","Message","showIcon","description","ButtonToolbar","Button","id","disabled","appearance","onClick","AuthUserContext","TopNavBar","Navbar","Header","display","padding","alignItems","justifyContent","Icon","icon","size","paddingRight","to","fontSize","textDecoration","Nav","pullRight","Item","color","onSelect","withAuthentication","WithAuthentication","listener","Provider","value","withAuthorization","condition","WithAuthorization","Loader","center","content","compose","withRouter","LoginPage","Container","height","Content","FlexboxGrid","justify","colspan","Panel","header","bordered","Footer","backgroundColor","Login","CourseShowcase","marginRight","substr","shaded","bodyFill","width","alt","src","image","maxHeight","minHeight","lineHeight","title","maxWidth","overflow","textOverflow","whiteSpace","withCourse","WithCourse","loading","getCourse","foundCourse","Promise","rs","i","length","flex","flexDirection","marginBottom","marginTop","headerImg","flexWrap","Array","from","reverse","isAdmin","SignupForm","referrer","set","className","SignUpPage","SignUp","drawerShow","toggleDrawer","renderAdmin","userCourses","coursesCreated","filter","createdBy","announcements","forEach","aKey","date","Date","createdOn","toLocaleString","courseTitle","sort","a","b","Tag","fontWeight","textAlign","fontStyle","enrolledCourses","courseId","includes","Badge","Avatar","IconButton","Drawer","show","onHide","Title","Body","userRole","renderStudent","SideNavigation","expanded","role","toUpperCase","Sidenav","top","left","zIndex","NavLinkStyle","bottom","mainTemplate","BreadCrumb","flexDir","AdminCoursePalette","createdCourses","once","all","List","hover","curriculum","students","index","styleCenter","titleStyle","slimText","dataStyle","pathname","paddingBottom","StudentCoursePalette","open","close","submissions","item","submission","inner","assId","assignment","data","ass","assTitle","flat","Table","Column","resizable","HeaderCell","Cell","rowData","submittedOn","dataKey","status","align","reviewedOn","marks","comments","Modal","backdrop","CoursePanel","WrappedComponents","right","Breadcrumb","active","qualificationData","label","difficultyLevel","durationAcceptor","Input","AddCoursePage","showError","qualification","levelOfStudy","duration","prerequisite","featureImage","uploading","createCourseBtnShow","setFileInfo","err","rsp","console","log","file","callback","reader","FileReader","onloadend","result","readAsDataURL","Uploader","dragable","fileListVisible","listType","onUpload","previewFile","blobFile","onError","accepter","SelectPicker","placeholder","rows","componentClass","EditCoursePage","retrievePageCourse","match","params","update","action","InputNumber","CurriculumModal","editorContext","shortDescription","allowPreview","curriculumId","defaultValue","Toggle","Line","Progress","AssignmentModal","uploaded","assFile","uploaderDisabled","uploadProgressShow","uploadProgress","onUploadChange","getCurriculums","formNext","curriculums","objKeys","obj","trim","timestamp","now","upload","put","bytesTransferred","totalBytes","getDownloadURL","downloadURL","url","curriId","attachmentUrl","window","location","reload","assKey","assignmentType","autoUpload","border","overflowY","percent","renderAssignments","assignmentId","panelNavigate","showCurriculumModal","showAssignmentModal","panelSelect","enrollCourse","renderCurriculum","curriculumModalToggle","assignmentModalToggle","scrollTo","isCourseCreator","enrolledToCourse","studId","joinedOn","full","PanelGroup","accordion","eventKey","flexGrow","fixed","href","textTransform","paddingLeft","renderEnrollButton","withCurriculum","WithCurriculum","getCurriculum","updateCurriculum","curriculumContent","CurriculumPage","contentState","sunEditor","editing","resizingBar","enable","showToolbar","disable","editorOnChange","editorSave","editToggle","replace","pullLeft","goBack","setOptions","buttonList","setContents","AddAnnouncement","announcement","userCreatedCourses","getCreatedCourses","marginLeft","withAssignment","WithAssignment","updateAssignment","questions","getAssignments","AssignmentPage","studentHasAttempted","saveQuestions","assignmentsQ","closeModal","addQuestion","removeQ","renderQuestions","stud","attempted","disabledAdmin","question","ReactHtmlParser","studentSubmitAnswer","openModal","enrolledCoursesKey","snapshotKey","dateNow","answers","studentId","studentName","renderForAdmin","ButtonGroup","renderForStudent","reviewAssignment","enrolledCourseKey","s","submissionKey","modalData","submissionData","onReviewSubmit","reviewedBy","reviewer","reviewerId","renderModal","answer","qna","Divider","formDefaultValue","resize","readOnly","plainText","exact","path","component","HomePage","Dashboard","AllCourses","AddCourses","Announcement","EditCourses","CoursePage","AdminSubmission","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f83e0613.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/lp.8c3784a7.png\";","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n    <FirebaseContext.Consumer>\n      {firebase => <Component {...props} firebase={firebase} />}\n    </FirebaseContext.Consumer>\n  );\n  \nexport default FirebaseContext;\n","import app from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\nimport 'firebase/storage';\nimport { Alert } from \"rsuite\";\n\nconst config = {\n\tapiKey: process.env.REACT_APP_API_KEY,\n\tauthDomain: process.env.REACT_APP_AUTH_DOMAIN,\n\tdatabaseURL: process.env.REACT_APP_DATABASE_URL,\n\tprojectId: process.env.REACT_APP_PROJECT_ID,\n\tstorageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n\tmessagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n\tappId: process.env.REACT_APP_APP_ID\n};\n\nclass Firebase {\n\tconstructor() {\n\t\tapp.initializeApp(config);\n\t\tthis.auth = app.auth();\n\t\tthis.db = app.database();\n\t\tthis.storage = app.storage();\n\t}\n\n\tdoCreateUserWithEmailAndPassword = (email, password) => {\n\t\treturn this.auth.createUserWithEmailAndPassword(email, password);\n\t};\n\tdoSignInWithEmailAndPassword = (email, password) => {\n\t\treturn this.auth.signInWithEmailAndPassword(email, password);\n\t};\n\n\tdoSignOut = () => {\n\t\tthis.auth.signOut();\n\t\tAlert.success('Successfully signed out...')\n\t};\n\n\tdoPasswordReset = email => {\n\t\treturn this.auth.sendPasswordResetEmail(email);\n\t};\n\n\tdoPasswordUpdate = password => {\n\t\treturn this.auth.currentUser.updatePassword(password);\n\t};\n\n\tuser = uid => this.db.ref(`users/${uid}`);\n\tusers = () => this.db.ref(\"users\");\n\n\tcourse = cid => this.db.ref(`courses/${cid}`);\n\tcourses = () => this.db.ref(\"courses\");\n\tcourseCurriculums = cid => this.db.ref(`courses/${cid}/curriculum`);\n\n\tassignments = cid => this.db.ref(`courses/${cid}/assignments`)\n\t// Database ref\n\tassignmentRef = () => this.storage.ref().child('assignments');\n\t\n\tonAuthUserListener = (next, fallback) =>{\n\t\tthis.auth.onAuthStateChanged(authUser => {\n\t\t\tif (authUser) {\n\t\t\t\tthis.user(authUser.uid).on('value', snapshot => {\n\t\t\t\t\tconst dbUser = snapshot.val();\n\t\t\t\t\tif (dbUser) {\n\t\t\t\t\t\tif (!dbUser.roles) {\n\t\t\t\t\t\t\tdbUser.roles = {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tauthUser = {\n\t\t\t\t\t\t\tuid: authUser.uid,\n\t\t\t\t\t\t\temail: authUser.email,\n\t\t\t\t\t\t\t...dbUser\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tnext(authUser);\n\t\t\t\t\t} \n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfallback();\n\t\t\t}\n\t\t});\n\t}\n\t\n\tonAuthCourseListener = (next, fallback) => {\n\t\tthis.auth.onAuthStateChanged(() => {\n\t\t\tthis.courses().on(\"value\", (snapshot, prevChildKey) => {\n\t\t\t\tconst coursesObject = snapshot.val();\n\n\t\t\t\tif(coursesObject){\n                    const coursesList = Object.keys(coursesObject).map(key => ({\n                        ...coursesObject[key],\n                        uid: key,\n                    }));\n\t\t\t\t\tnext(coursesList);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tfallback();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t};\n}\n\nexport default Firebase;\n","import FirebaseContext, { withFirebase } from './context';\nimport Firebase from './firebase';\n\nexport default Firebase;\nexport { withFirebase, FirebaseContext };","import React, {Component} from 'react';\nimport { \n    Form, \n    FormGroup,\n    FormControl, \n    ControlLabel, \n    Button,\n    ButtonToolbar,\n    Alert,\n    Message\n} from 'rsuite';\n\nconst INITIAL_STATE = {\n    email: '',\n    password: '',\n    error: '',\n};\n\nexport default class LoginForm extends Component{\n    constructor(props){\n        super(props);\n\n        this.state = {\n            errorPlacement: 'bottomStart',\n            showEmailError: false,\n            showPasswordError: false,\n            isFormSubmit: false,\n\n            ...INITIAL_STATE,\n        }\n        this.formSubmit = this.formSubmit.bind(this);\n    }\n\n    formSubmit(e) {\n        const { email, password } = this.state;\n\n        this.props.firebase.doSignInWithEmailAndPassword(email, password).then(() => {\n            this.setState({ ...INITIAL_STATE });\n            Alert.success('Successfully logged in. Redirecting...', 5000)\n            this.props.history.push('/dashboard');\n        }).catch(error => {\n            let message = error.message;\n            this.setState({ error: message });\n        });\n\n        e.preventDefault();\n    };\n\n    render(){\n        const { showEmailError, showPasswordError, errorPlacement } = this.state;\n        const emailErrorMessage = showEmailError ? 'This field is required' : null;\n        const passwordErrorMessage = showPasswordError ? 'This field is required' : null;\n\n        const isInvalid =\n            !this.state.email ||\n            !this.state.password\n\n        return(\n            <div>\n                <Form fluid layout=\"vertical\" \n                    onChange={formValue => {\n                        this.setState({\n                            email: formValue.email,\n                            password: formValue.password,\n                        });\n                    }}>\n\n                    <FormGroup>\n                        <ControlLabel>Email</ControlLabel>\n                        <FormControl \n                            name=\"email\"\n                            errorMessage= {emailErrorMessage}\n                            errorPlacement = {errorPlacement}\n                        />\n                    </FormGroup>\n\n                    <FormGroup\n                        style={{type:\"password\"}}    \n                    >\n                        <ControlLabel>Password</ControlLabel>\n                        <FormControl \n                            name=\"password\"\n                            errorMessage= {passwordErrorMessage}\n                            errorPlacement= {errorPlacement}\n                            type= \"password\"\n                        />\n                    </FormGroup>\n\n                    {this.state.error?  \n                        <div style ={{  position: 'relative', margin: '20px'}}>\n                            <Message showIcon type=\"error\" description={this.state.error} />\n                        </div>\n                    : ''}\n\n                    <FormGroup>\n                        <ButtonToolbar>\n                            <div>\n                                <Button id=\"login\" disabled= {isInvalid} appearance=\"ghost\" onClick={this.formSubmit}>Login</Button>\n                                {/* <Button appearance=\"link\">Forgot password?</Button> */}\n                            </div>\n                        </ButtonToolbar>\n                    </FormGroup>\n                </Form>\n            </div>\n        )\n    }\n}","import React from 'react';\n\nconst AuthUserContext = React.createContext(null);\n\nexport default AuthUserContext;","import React, {Component} from 'react';\nimport {Icon, Navbar, Nav} from 'rsuite';\nimport {NavLink} from 'react-router-dom';\nimport AuthUserContext from '../Session/context';\nimport { withFirebase } from '../Firebase';\n\nclass TopNavBar extends Component {\n    render(){\n        return(\n            <AuthUserContext.Consumer>\n                {\n                    authUser => {\n                        return(\n                            <div>\n                                <Navbar appearance=\"inverse\">\n                                    <Navbar.Header style={{display: \"flex\", padding: '18px 20px', alignItems: 'center', justifyContent: 'center'}}>\n                                        <div>\n                                            <Icon icon=\"book\" size=\"2x\" style={{paddingRight: '5px'}}/>\n                                            <NavLink to=\"/\" style={{fontSize: '25px', textDecoration: 'none'}}>Webcademy</NavLink>\n                                        </div>\n                                    </Navbar.Header>\n\n                                    <Nav pullRight>\n                                        {\n                                            authUser? \n                                                (<>\n                                                    <Nav.Item>  \n                                                        <NavLink to=\"/dashboard\" style={{color:'white', textDecoration: 'none'}}>Dashboard</NavLink>\n                                                    </Nav.Item>\n                                                    <Nav.Item onSelect={this.props.firebase.doSignOut}>\n                                                        Sign out\n                                                    </Nav.Item>\n                                                </>\n                                                )\n                                                :\n                                                (<>\n                                                    <Nav.Item>  \n                                                        <NavLink to=\"/signup\" style={{color:'white', textDecoration: 'none'}}>Signup</NavLink>\n                                                    </Nav.Item>\n                                                    <Nav.Item>\n                                                        <NavLink to=\"/login\" style={{color:'white', textDecoration: 'none'}}>Login</NavLink>\n                                                    </Nav.Item>\n                                                </>)\n                                        }\n                                    </Nav>\n                                </Navbar>\n                            </div>\n                        )\n                    }\n                }\n            </AuthUserContext.Consumer>\n        )\n    }\n}\n\nexport default withFirebase(TopNavBar);","import React from 'react';\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\n\nconst withAuthentication = Component => {\n    class WithAuthentication extends React.Component {\n        constructor(props) {\n            super(props);\n            this.state = {\n                authUser: null\n            };\n        }\n\n        componentDidMount() {\n            this.listener = this.props.firebase.onAuthUserListener(\n                authUser => {\n                    this.setState({ authUser });\n                },\n                () => {\n                    this.setState({ authUser: null });\n                }\n            );\n        }\n\n        render() {\n            return (\n                <AuthUserContext.Provider value={this.state.authUser}>\n                    {this.state.authUser? <Component {...this.props} authUser={this.state.authUser}/>: <Component {...this.props}/>}\n                </AuthUserContext.Provider>\n\n            );\n        }\n    }\n    return withFirebase(WithAuthentication);\n};\nexport default withAuthentication;\n","import React from 'react';\nimport { compose } from 'recompose';\nimport { withFirebase } from '../Firebase';\nimport { withRouter } from 'react-router-dom';\nimport AuthUserContext from './context';\nimport { Loader } from 'rsuite';\n\nconst withAuthorization = condition => Component => {\n    class WithAuthorization extends React.Component {\n        componentDidMount() {\n            this.listener = this.props.firebase.onAuthUserListener(\n                authUser => {\n                    if (!condition(authUser)) {\n                        this.props.history.push('/login');\n                    }\n                },\n                () => this.props.history.push('/login')\n            );\n        }\n\n        render() {\n            return (\n                <AuthUserContext.Consumer>\n                    {authUser =>\n                        condition(authUser) ? (\n                            <Component {...this.props} />\n                        ) : <Loader center content=\"loading\" />\n                    }\n                </AuthUserContext.Consumer>\n            );\n        }\n    }\n    return compose(withRouter, withFirebase)(WithAuthorization);\n};\n\nexport default withAuthorization;\n","import React, {Component} from 'react';\nimport { withFirebase } from '../Firebase';\nimport { withRouter } from 'react-router-dom';\nimport LoginForm from './LoginForm';\nimport TopNavBar from '../Navbar/TopNavBar';\nimport {Container, Content, FlexboxGrid, Panel, Header, Footer} from 'rsuite';\nimport { compose } from 'recompose';\nimport { AuthUserContext } from '../Session';\n\nclass LoginPage extends Component {\n    componentDidMount(){\n        this.listener = this.props.firebase.auth.onAuthStateChanged(authUser => {\n            if(authUser){\n                this.props.history.push('/dashboard');\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this.listener();\n    }\n\n    render(){\n        return(\n            <AuthUserContext.Consumer>{authUser => {\n                const View = !authUser? (\n                    <div>\n                        <Container style={{height: '100vh'}}>\n                            <Header>\n                                <TopNavBar/>\n                            </Header>\n                            <Content style={{margin: '20px', padding: '20px'}}>\n                                <FlexboxGrid justify='center'>\n                                    <FlexboxGrid.Item colspan={12}>\n                                        <Panel header={<h2>Login</h2>} bordered>\n                                            <LoginForm {...this.props}/>\n                                        </Panel>\n                                    </FlexboxGrid.Item>\n                                </FlexboxGrid>\n                            </Content>\n                            <Footer style={{padding: '20px', backgroundColor: 'black'}}>ShaneLMS</Footer>\n                        </Container>\n                    </div>\n                ): ''\n\n                return View;\n            }}\n            </AuthUserContext.Consumer>\n            \n            \n        )\n    }\n}\n\nconst Login = compose(\n    withRouter,\n    withFirebase,\n)(LoginPage);\n\nexport default (Login);","import React, { Component } from 'react';\nimport { Panel } from 'rsuite';\nimport { NavLink } from 'react-router-dom';\n\nexport default class CourseShowcase extends Component{\n\n    render(){\n        const course = this.props.course;\n        return(\n            <div style={{marginRight: '6px'}}>\n                <NavLink to={`/courses/${course.uid.substr(1)}`} style={{ textDecoration: 'none' }}>\n                    <Panel shaded bordered bodyFill style={{ display: 'inline-block', width: 240 }}>\n                        <img \n                            alt= ''\n                            src= {course.image}\n                            style= {{height:\"150px\", width: '100%'}}\n                        />\n                        <Panel style={{maxHeight: '150px', minHeight: '180px'}}>\n                            <div style={{color: '#272c36', minHeight: '80px', maxHeight: '80px', fontSize: '16px', lineHeight: 1.25}}>\n                                <p>{course.title}</p>\n                            </div>\n                            <p style={{maxWidth: '100%', overflow: 'hidden', textOverflow: 'ellipsis', whiteSpace: 'nowrap', color: 'black'}}>\n                                {course.description}\n                            </p>\n                        </Panel>\n                    </Panel>\n                </NavLink>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport { withFirebase } from '../../Firebase';\nimport { Loader } from 'rsuite';\n\nconst withCourse = Component => {\n    class WithCourse extends React.Component{\n        constructor(props){\n            super(props);\n\n            this.state = {\n                coursesList: null,\n                course: null,\n                loading: true,\n            }\n\n            this.getCourse = this.getCourse.bind(this);\n        }\n\n        componentDidMount(){\n            this.listener = this.props.firebase.onAuthCourseListener((coursesList)=>{\n                this.setState({ coursesList, loading: false })\n            },\n            ()=>{\n                this.setState({ coursesList: null, loading: false })\n                }\n            )\n        }\n        \n        async getCourse(id){\n            const {coursesList} = this.state;\n            let foundCourse = null;\n            \n            await new Promise(rs => {\n                for(let i = 0; i< coursesList.length; i++){\n                    if(coursesList.uid === id){\n                        foundCourse = coursesList[i];\n                        rs();\n                        break;\n                    }\n                }\n            })\n            return foundCourse;\n        }\n\n        render(){\n            return(\n                <>\n                    {\n                        this.state.loading?\n                            <Loader center/>\n                        :   \n                        (\n                            this.state.coursesList?\n                                <Component {...this.props} coursesList={this.state.coursesList} getCourse={this.getCourse}/>\n                            :   <Component {...this.props} />\n                        )\n                    }\n                </>\n            )\n        }\n    }\n\n    return withFirebase(WithCourse);\n}\n\nexport default withCourse;","import React, {Component} from 'react';\nimport TopNavBar from '../Navbar/TopNavBar';\nimport { Container, Button } from 'rsuite';\nimport headerImg from '../../assets/lp.png'\nimport CourseShowcase from '../Courses/CourseShowcase';\nimport withCourse from '../Courses/Context/withCourse';\nimport { NavLink } from 'react-router-dom';\nclass HomePage extends Component {\n    render(){\n\t\tconst coursesList = this.props.coursesList;\n\n\t\treturn(\n\t\t\t<div>\n\t\t\t<TopNavBar/>\n\t\t\t\t<Container style= {{ flex: 1, flexDirection: 'row', backgroundColor: '#3498ff', minHeight: '500px'}}>\n\t\t\t\t\t<Container style={{margin: '100px', color: 'white'}}>\n\t\t\t\t\t\t<h1 style={{lineHeight: '80px', marginBottom: '15px'}}>The Most Trusted <br/>Simplified LMS</h1>\n\t\t\t\t\t\t<p>The #1 featured product on ProductHunt and a featured LMS on People's Choice Magazine.</p>\n\t\t\t\t\t\t<Button style={{marginTop: '20px', width: '150px'}}><NavLink to='/courses' style={{textDecoration: 'none', color:'#575757'}}>Get Started</NavLink></Button>\n\t\t\t\t\t</Container>\n\t\t\t\t\t<Container style={{margin: '80px', color: 'white'}}>\n\t\t\t\t\t\t<img src={headerImg} style={{width: '350px', height: '250'}} alt=''></img>\n\t\t\t\t\t</Container>\n\t\t\t\t</Container>\n\n\t\t\t\t<Container style = {{margin: '50px', flexDirection: 'column'}}>\n\t\t\t\t\t<Container>\n\t\t\t\t\t\t<h3>Recently Added</h3>\n\t\t\t\t\t</Container>\n\t\t\t\t\t\n\t\t\t\t\t<Container style={{flex: 1, flexDirection: 'row', flexWrap: 'wrap'}}>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcoursesList && coursesList.length?\n\t\t\t\t\t\t\t\tArray.from(coursesList).reverse().map((course, i) => {\n\t\t\t\t\t\t\t\t\tif(i < 4){\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<CourseShowcase course={course}/>\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t})\t\n\t\t\t\t\t\t\t:null\n\t\t\t\t\t\t}\n\t\t\t\t\t</Container>\n\t\t\t\t</Container>\n\t\t\t</div>\n\t\t)\n\t}\n  }\n  \n  export default withCourse(HomePage);\n  \n","import React, {Component} from 'react';\nimport { \n    Form, \n    FormGroup,\n    FormControl, \n    ControlLabel, \n    Button,\n    ButtonToolbar,\n    Message,\n    Alert,\n} from 'rsuite';\n\nconst INITIAL_STATE = {\n    name: '',\n    email: '',\n    password: '',\n    isAdmin: false,\n    error: '',\n};\n\nexport default class SignupForm extends Component{\n    constructor(props){\n        super(props);\n\n        this.state = {\n            errorPlacement: 'bottomStart',\n            showEmailError: false,\n            isFormSubmit: false,\n            referrer: '',\n            ...INITIAL_STATE\n        }\n\n        this.formSubmit = this.formSubmit.bind(this);\n    }\n    \n    formSubmit(e) {\n        let { name, email, password, isAdmin, referrer } = this.state;\n        const roles = {};\n        \n        isAdmin = referrer === 'INSTR' ? true : false;\n\n        if(isAdmin){\n            roles['userRole'] = 'admin';\n        }\n        else{\n            roles['userRole'] = 'student';\n        }\n        \n        this.props.firebase.doCreateUserWithEmailAndPassword(email, password).then(authUser => {\n            return this.props.firebase.user(authUser.user.uid).set({name, email, roles})\n        }).then(() => {\n            this.setState({ ...INITIAL_STATE });\n            Alert.success('Successfully registered. Redirecting...', 5000)\n            this.props.history.push('/dashboard');\n\n        }).catch(error => {\n            let message = error.message;\n            this.setState({error: message});\n        });\n\n        e.preventDefault();\n    };\n\n    render(){\n        const { showEmailError, errorPlacement } = this.state;\n        const emailErrorMessage = showEmailError ? 'This field is required' : null;\n        const password = this.state.password;\n        const passwordErrorMessage = (password && password.length > 2 && password.length < 10) ? 'Password must contain at least 10 characters' : '';\n\n        const isInvalid =\n            !this.state.name ||\n            !this.state.email ||\n            !(this.state.password && this.state.password.length >= 10);\n\n        return(\n            <div>\n                <Form fluid layout=\"vertical\" \n                    onChange={formValue => {\n                        this.setState({\n                            name: formValue.name,\n                            email: formValue.email,\n                            password: formValue.password,\n                            referrer: formValue.referrer, \n                        });\n                    }}\n                    >\n                    <FormGroup>\n                        <ControlLabel>Full Name</ControlLabel>\n                        <FormControl \n                            name=\"name\"\n                            errorMessage= {emailErrorMessage}\n                            errorPlacement = {errorPlacement}\n                        />\n                    </FormGroup>\n                    <FormGroup>\n                        <ControlLabel>Email</ControlLabel>\n                        <FormControl \n                            name=\"email\"\n                            errorMessage= {emailErrorMessage}\n                            errorPlacement = {errorPlacement}\n                        />\n                    </FormGroup>\n\n                    <FormGroup\n                        style={{type:\"password\"}}    \n                    >\n                        <ControlLabel>Password</ControlLabel>\n                        <FormControl \n                            name=\"password\"\n                            errorMessage= {passwordErrorMessage}\n                            errorPlacement= {errorPlacement}\n                            type= \"password\"\n                        />\n                    </FormGroup>\n\n                    <FormGroup\n                        style={{type:\"password\"}}    \n                    >\n                        <ControlLabel>Referrer (Optional)</ControlLabel>\n                        <FormControl \n                            name=\"referrer\"\n                        />\n                    </FormGroup>\n\n                    {this.state.error?  \n                        <div style ={{  position: 'relative', margin: '20px'}}>\n                            <Message showIcon type=\"error\" description={this.state.error} />\n                        </div>\n                    : ''}\n\n                    <FormGroup>\n                        <ButtonToolbar>\n                            <Button className='signup' disabled= {isInvalid} appearance=\"ghost\" onClick={this.formSubmit}>Signup</Button>\n                        </ButtonToolbar>\n                    </FormGroup>\n                </Form>\n            </div>\n        )\n    }\n}","import React, {Component} from 'react';\nimport { withFirebase } from '../Firebase';\nimport SignupForm from './SignupForm';\nimport TopNavBar from '../Navbar/TopNavBar';\nimport { withRouter } from 'react-router-dom';\n\nimport {Container, Content, FlexboxGrid, Panel, Header, Footer} from 'rsuite';\nimport { compose } from 'recompose';\nimport { AuthUserContext } from '../Session';\n\nclass SignUpPage extends Component {\n    componentDidMount(){\n        this.listener = this.props.firebase.auth.onAuthStateChanged(authUser => {\n            if(authUser){\n                this.props.history.push('/dashboard');\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this.listener();\n    }\n\n    render(){\n        return(\n            <AuthUserContext.Consumer>{authUser => {\n                    const View = !authUser? (\n                        <div>\n                            <Container style={{height: '100vh'}}>\n                                <Header>\n                                    <TopNavBar/>\n                                </Header>\n                                <Content style={{margin: '20px', padding: '20px'}}>\n                                    <FlexboxGrid justify='center'>\n                                        <FlexboxGrid.Item colspan={12}>\n                                            <Panel header={<h2>Signup</h2>} bordered>\n                                                <SignupForm {...this.props}/>\n                                            </Panel>\n                                        </FlexboxGrid.Item>\n                                    </FlexboxGrid>\n                                </Content>\n                                <Footer style={{padding: '20px', backgroundColor: 'black'}}>ShaneLMS</Footer>\n                            </Container>\n                        </div>\n                    ):\n                    ''\n                    return View\n                }\n            }\n            </AuthUserContext.Consumer>\n\n            \n            \n        )\n    }\n}\n\nconst SignUp = compose(\n    withRouter,\n    withFirebase,\n)(SignUpPage);\n\nexport default (SignUp);\n","import React, { Component } from 'react';\nimport { Avatar, Badge, Icon, IconButton, Drawer, Tag } from 'rsuite';\nimport withCourse from '../Courses/Context/withCourse';\n\nclass AnnouncementsPanel extends Component{\n    constructor(props){\n        super(props);\n\n        this.state = {\n            drawerShow: false\n        };\n\n        this.toggleDrawer = this.toggleDrawer.bind(this);\n        this.renderAdmin = this.renderAdmin.bind(this);\n    }\n\n    toggleDrawer(){\n        this.setState({drawerShow: !this.state.drawerShow});\n    }\n\n    renderAdmin(){\n        const uid = this.props.authUser.uid;\n        let userCourses = !!(this.props.authUser.coursesCreated)? true: false;\n        \n        //User created courses\n        if(userCourses){\n            userCourses = this.props.coursesList.filter(course => {\n                return course.createdBy === uid && course.announcements;\n            })\n            let announcements = [];\n\n            userCourses.forEach(course => {\n                const announcementKey = Object.keys(course.announcements);\n\n                announcementKey.forEach(aKey => {\n                    const date = new Date(course.announcements[aKey].createdOn).toLocaleString();\n                    announcements.push({\n                        courseTitle: course.title,\n                        content: course.announcements[aKey].content,\n                        createdOn: date,\n                        createdBy: course.announcements[aKey].createdBy,\n                    })\n                })\n            })\n            announcements = announcements.sort((a, b) => (a.createdOn < b.createdOn) ? 1 : ((b.createdOn < a.createdOn) ? -1 : 0)); \n\n            return(\n                <div style={{flex: 1}}>\n                    {announcements.length? \n                        announcements.map((a, i) => {\n                            return(\n                                <>\n                                    <Tag color=\"violet\">{a.courseTitle}</Tag>\n                                    <Tag>{a.createdOn} - <span style={{fontWeight: 'bold'}}>{a.createdBy? a.createdBy: 'Unknown'}</span></Tag>\n                                    <p>{a.content}</p>\n                                    <br/>\n                                </>\n                            )\n                        })\n                    :   <p style={{textAlign: 'center', fontStyle: 'italic'}}>No announcements have been created...</p>    \n                    }\n                </div>\n\n            )\n        }\n        else{\n            return(\n                <p style={{textAlign: 'center', fontStyle: 'italic'}}>Nothing to display...</p>\n            )\n        }\n\n    }\n\n    renderStudent(){\n        let enrolledCourses = this.props.authUser.enrolledCourses;\n        let announcements = [];\n\n        if(enrolledCourses){\n            enrolledCourses = Object.keys(enrolledCourses).map(key => {\n                return enrolledCourses[key].courseId;\n            })\n\n           enrolledCourses = this.props.coursesList.filter(course => {\n               return enrolledCourses.includes(course.uid.substr(1));\n           })\n\n           enrolledCourses.forEach(course => {\n                if(course.announcements){\n                    Object.keys(course.announcements).forEach(aKey => {\n                        const date = new Date(course.announcements[aKey].createdOn).toLocaleString();\n                        announcements.push({\n                            courseTitle: course.title,\n                            content: course.announcements[aKey].content,\n                            createdOn: date,\n                            createdBy: course.announcements[aKey].createdBy,\n                        })\n                    })\n                }\n           })\n           \n            announcements = announcements.sort((a, b) => (a.createdOn < b.createdOn) ? 1 : ((b.createdOn < a.createdOn) ? -1 : 0));\n            return(\n                <div style={{flex: 1}}>\n                    {announcements.length? \n                        announcements.map((a, i) => {\n                            return(\n                                <div key={i} id=\"announcementItem\">\n                                    <Tag color=\"violet\">{a.courseTitle}</Tag>\n                                    <Tag>{a.createdOn} - <span style={{fontWeight: 'bold'}}>{a.createdBy? a.createdBy: 'Unknown'}</span></Tag>\n                                    <p>{a.content}</p>\n                                    <br/>\n                                </div>\n                            )\n                        })\n                    :   <p style={{textAlign: 'center'}}>No announcements have been created...</p>    \n                    }\n                </div>\n    \n            )\n        }        \n    }\n\n    render(){\n        return(\n            <div>\n                <Badge content={null} >\n                    <Avatar size=\"sm\">\n                    <IconButton  \n                    id='announcements'\n                        icon={<Icon icon=\"bell\" />}\n                        onClick= {this.toggleDrawer}\n                    />\n                    </Avatar>\n                </Badge>\n\n                <Drawer size='md' show={this.state.drawerShow} onHide={this.toggleDrawer} >\n                    <Drawer.Header>\n                        <Drawer.Title>Announcements</Drawer.Title>\n                        <Drawer.Body style={{height: '100%'}}>\n                            {\n                                this.props.authUser.roles.userRole === 'admin'?\n                                    this.renderAdmin()\n                                :   this.renderStudent()\n                            \n                            }\n                        </Drawer.Body>\n                    </Drawer.Header>\n                </Drawer>\n            </div>\n        )\n    }\n}\n\nexport default withCourse(AnnouncementsPanel);","import React from 'react';\nimport { withFirebase } from '../Firebase';\nimport {Nav, Icon} from 'rsuite';\n\nconst SignOutButton = ({ firebase }) => (\n    <Nav.Item onSelect={firebase.doSignOut} icon={<Icon icon=\"sign-out\"/>}>\n        <p style={{fontSize: '12px'}}>Sign out</p>\n    </Nav.Item>\n);\n\nexport default withFirebase(SignOutButton);","import React, { Component } from 'react';\nimport { Sidenav, Icon, Nav, Avatar } from 'rsuite';\nimport SignOutButton from '../Signout/SignOutButton';\nimport { NavLink } from 'react-router-dom';\n\nexport default class SideNavigation extends Component {\n    constructor() {\n        super();\n        this.state = {\n            expanded: true\n        };\n    }\n\n    render() {\n        const { expanded } = this.state;\n        let role = this.props.roles.userRole;\n        role = role[0].toUpperCase() + role.substr(1);\n\n        return (\n            <div style={{ width: 200 }}>\n                <Sidenav\n                    expanded={expanded}\n                    appearance='subtle'\n                    style={{\n                        backgroundColor: '#1a1d24',\n                        position: 'fixed',\n                        width: '200px',\n                        top: 0,\n                        left: 0,\n                        zIndex: 10,\n                        height: '100vh'\n                    }}>\n                    <Sidenav.Header>\n                        <div\n                            style={{\n                                backgroundColor: '#1a1d24',\n                                padding: '20px 20px 10px',\n                                fontSize: '16px',\n                                color: 'white'\n                            }}>\n                            <NavLink\n                                to='/'\n                                style={{\n                                    textDecoration: 'none',\n                                    color: 'white'\n                                }}>\n                                <Icon\n                                    icon='book'\n                                    style={{ marginRight: '5px' }}\n                                />\n                                Webcademy\n                            </NavLink>\n                        </div>\n                    </Sidenav.Header>\n\n                    <Sidenav.Body>\n                        <Nav\n                            style={{\n                                textAlign: 'center',\n                                color: 'white',\n                                marginTop: '20px',\n                                marginBottom: '20px'\n                            }}>\n                            <Avatar size='lg'>\n                                <Icon icon='user-o' />\n                            </Avatar>\n                        </Nav>\n                        <p\n                            style={{\n                                color: 'white',\n                                textAlign: 'center',\n                                marginTop: '-10px',\n                                fontSize: '11px'\n                            }}\n                            id=\"role\"\n                        >\n                            {role}\n                        </p>\n\n                        <Nav>\n                            <NavLink to='/dashboard' style={NavLinkStyle}>\n                                <Nav.Item icon={<Icon icon='dashboard' />}>\n                                    <p style={{ fontSize: '12px' }}>\n                                        Dashboard\n                                    </p>\n                                </Nav.Item>\n                            </NavLink>\n\n                            <NavLink to='/courses' style={NavLinkStyle}>\n                                <Nav.Item icon={<Icon icon='heart' />}>\n                                    <p style={{ fontSize: '12px' }}>\n                                        All Courses\n                                    </p>\n                                </Nav.Item>\n                            </NavLink>\n\n                            {role === 'Admin'? \n                                <NavLink to='/submissions' style={NavLinkStyle}>\n                                    <Nav.Item icon={<Icon icon='pencil' />}>\n                                        <p style={{ fontSize: '12px' }}>\n                                            Submissions\n                                        </p>\n                                    </Nav.Item>\n                                </NavLink>\n                            : null\n                            }\n                        </Nav>\n\n                        {role === 'Admin' ? (\n                            <Nav style={{ marginTop: '60px' }}>\n                                <NavLink\n                                    to='/course/add'\n                                    style={{\n                                        ...NavLinkStyle\n                                    }}>\n                                    <Nav.Item\n                                        icon={<Icon icon='plus-square' />}>\n                                        <p style={{ fontSize: '12px' }}>\n                                            Create course\n                                        </p>\n                                    </Nav.Item>\n                                </NavLink>\n\n                                <NavLink\n                                    to='/announcement/add'\n                                    style={{\n                                        ...NavLinkStyle\n                                    }}>\n                                    <Nav.Item\n                                        icon={<Icon icon='plus-square' />}>\n                                        <p style={{ fontSize: '12px' }}>\n                                            Create Announcement\n                                        </p>\n                                    </Nav.Item>\n                                </NavLink>\n                            </Nav>\n                        ) : null}\n\n                        <Nav\n                            style={{\n                                bottom: 0,\n                                position: 'absolute',\n                                width: '100%'\n                            }}>\n                            <SignOutButton />\n                        </Nav>\n                    </Sidenav.Body>\n                </Sidenav>\n            </div>\n        );\n    }\n}\n\nconst NavLinkStyle = {\n    textDecoration: 'none',\n    color: '#8e8e93'\n};\n","import React from 'react';\nimport SideNavigation from '../Navbar/SideNavigation';\nimport TopNavBar from '../Navbar/TopNavBar'\nimport { Container} from 'rsuite';\nimport { AuthUserContext, } from '../Session';\n\nconst mainTemplate = (Header, BreadCrumb, Body) =>{\n    class MainTemplate extends React.Component{\n\n        render(){\n            return(\n                <AuthUserContext.Consumer>\n                    {authUser => {\n                        const flexDir = authUser? 'row': 'column';\n\n                        return(\n                            <Container style={{flex: 1, flexDirection: flexDir, minHeight: '100%'}}>\n                            {\n                                authUser? \n                                    <SideNavigation {...authUser}/>\n                                :   <TopNavBar/>\n                            }\n    \n                            <Container style={{flex: 1, flexDirection: 'column'}}>\n                                {authUser?\n                                    <Container style={{flex: 1, backgroundColor: '#f5f5f5', minHeight: '50px'}}>\n                                        <Header {...this.props} authUser={authUser}/>\n                                    </Container>\n                                : null\n                                }\n    \n                                <Container style={{flex: 1,  margin: '0px'}}>\n                                    <Container style={{flex: 1}}>\n                                        {\n                                            authUser?\n                                                <Container style= {{fontSize: '20px'}}>\n                                                    <BreadCrumb {...this.props}/>\n                                                </Container> \n                                            : null\n                                        }\n                                        <Container style={{flex: 1, margin: '20px', fontSize: '20px'}}>\n                                            <Body {...this.props} authUser={authUser}/>\n                                        </Container>\n                                    </Container>\n                                </Container>\n                            </Container>\n                        </Container>\n                        )\n                    }}\n                </AuthUserContext.Consumer>\n            )\n        }\n    }\n    return MainTemplate;\n}\n\nexport default mainTemplate;","import React from 'react';\nimport { withFirebase } from '../../Firebase';\nimport { FlexboxGrid, List, Button } from 'rsuite';\nimport { NavLink, Link } from 'react-router-dom';\n\nclass AdminCoursePalette extends React.Component{\n    constructor(props){\n        super(props);\n\n        this.state = {\n            courses: [],\n        }\n    }\n    async componentDidMount(){\n        const createdCourses = this.props.authUser.coursesCreated;\n        let coursesList = [];\n        let courses = null;\n\n        if(createdCourses){\n            coursesList = Object.keys(createdCourses).map(key => \n                createdCourses[key].courseId\n            );\n    \n            coursesList = coursesList.map(id => {\n                return new Promise(rs => {\n                    this.props.firebase.course(`-${id}`)\n                        .once('value')\n                        .then(snapshot => {    \n                            const course = snapshot.val();\n                            rs({course, id});\n                        })\n                })\n            })\n\n            courses = await Promise.all(coursesList).then(courses =>{\n                return courses;\n            })\n            \n            this.setState({courses});\n        }\n        \n        \n    }\n\n    render(){\n        const courses = this.state.courses ? this.state.courses: [];\n        return(\n            <div>\n                <div style={{marginBottom: '5px'}}>\n                    <p>My Created Courses</p>\n                </div>\n                <div>\n                    {\n\t\t\t\t\t\tcourses? \n\t\t\t\t\t\t\t<List hover>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcourses.map((course, i)=> {\n\t\t\t\t\t\t\t\t\tlet curriculum = course.course.curriculum || {};\n\t\t\t\t\t\t\t\t\tcurriculum = curriculum? Object.keys(curriculum).length: 0;\n                                    let students = course.course.students? Object.keys(course.course.students).length : 0;\n\t\t\t\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t<NavLink to={`/courses/${course.id}`} style={{textDecoration:'none', color: '#575757'}}>\n\t\t\t\t\t\t\t\t\t\t\t\t<List.Item key={i} index={i}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FlexboxGrid>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FlexboxGrid.Item colspan={3}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={course.course.image} width='100px' height='70px' alt=''></img>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</FlexboxGrid.Item>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FlexboxGrid.Item colspan={8} style={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...styleCenter,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tflexDirection: 'column',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\talignItems: 'flex-start',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toverflow: 'hidden'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={titleStyle}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{course.course.title}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</FlexboxGrid.Item >\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FlexboxGrid.Item colspan={3}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{ textAlign: 'right' }}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={slimText}>Students</div>\n                                                                <div style={dataStyle}>{students}</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</FlexboxGrid.Item>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FlexboxGrid.Item colspan={3}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{ textAlign: 'right' }}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={slimText}>Curriculums</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t    <div style={dataStyle}>{curriculum}</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</FlexboxGrid.Item>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FlexboxGrid.Item colspan={4} style={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...styleCenter\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\n                                                            <Link to={{\n                                                                pathname: `/course/edit/${course.id}`,\n                                                                state: {\n                                                                    course: course.course\n                                                                }\n                                                            }}>\n                                                                <Button id='editBtn' color=\"yellow\" appearance=\"ghost\">\n                                                                    Edit\n                                                                </Button>\n                                                            </Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</FlexboxGrid.Item>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</FlexboxGrid>\n\t\t\t\t\t\t\t\t\t\t\t\t</List.Item>\n\t\t\t\t\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</List>\n\t\t\t\t\t\t: <p>No courses created...</p>\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nconst styleCenter = {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '60px'\n};\n  \n  const slimText = {\n    fontSize: '0.666em',\n    color: '#97969B',\n    fontWeight: 'lighter',\n    paddingBottom: 5\n};\n  \n  const titleStyle = {\n    padding: 5,\n    whiteSpace: 'nowrap',\n    fontWeight: 500,\n    fontSize: '14px'\n};\n  \n  const dataStyle = {\n    fontSize: '1.2em',\n    fontWeight: 500\n};\nexport default withFirebase(AdminCoursePalette);","import React from 'react';\nimport { withFirebase } from '../../Firebase';\nimport { Button, Panel, Table, Modal } from 'rsuite';\nimport { compose } from 'recompose';\nimport withCourse from '../../Courses/Context/withCourse';\n\nclass StudentCoursePalette extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            courses: [],\n            show: false\n        };\n    }\n    async componentDidMount() {\n        const enrolledCourses = this.props.authUser.enrolledCourses;\n        const coursesList = this.props.coursesList;\n\n        let submissions = [];\n\n        if (enrolledCourses) {\n            submissions = Object.keys(enrolledCourses).map(key => {\n                const courseId = enrolledCourses[key].courseId;\n\n                const course = coursesList.filter(item => {\n                    return item.uid === `-${courseId}`;\n                });\n\n                return {\n                    courseId: enrolledCourses[key].courseId,\n                    courseTitle: course[0].title,\n                    submissions: enrolledCourses[key].submissions\n                };\n            });\n\n            //Extract submissions innerkey\n            submissions = submissions.map(item => {\n                if (item.submissions) {\n                    const key = Object.keys(item.submissions);\n\n                    const submission = key.map(key => {\n                        return item.submissions[key];\n                    });\n\n                    return {\n                        courseId: item.courseId,\n                        courseTitle: item.courseTitle,\n                        submissions: submission\n                    };\n                }\n\n                return {\n                    courseId: item.courseId,\n                    courseTitle: item.courseTitle\n                };\n            });\n            this.setState({ submissions });\n\n            submissions = submissions\n                .map(item => {\n                    if (item.submissions) {\n                        item.submissions = item.submissions.map(inner => {\n                            const assId = '-' + inner.assId;\n\n                            const course = coursesList.filter(course => {\n                                return course.uid === `-${item.courseId}`;\n                            });\n\n                            let assignment = course[0].assignments;\n                            const keys = Object.keys(assignment);\n\n                            assignment = keys.map(key => {\n                                return {\n                                    key,\n                                    data: assignment[key]\n                                };\n                            });\n\n                            assignment = assignment.filter(ass => {\n                                return ass.key === assId;\n                            });\n\n                            assignment = assignment[0].data;\n\n                            return {\n                                ...inner,\n                                assTitle: assignment.title\n                            };\n                        });\n                        return null;\n                    } else {\n                      return null;\n                    }\n                })\n                .flat();\n        }\n    }\n\n    open = () => {\n        this.setState({ show: true });\n    };\n\n    close = () => {\n        this.setState({ show: false });\n    };\n\n    render() {\n        const submissions = this.state.submissions\n            ? this.state.submissions\n            : [];\n\n        return (\n            <div>\n                <div style={{ marginBottom: '5px' }}>\n                    <p>My Submissions</p>\n                </div>\n                <div>\n                    {submissions\n                        ? submissions.map(submission => {\n                              return (\n                                  <Panel\n                                      bordered\n                                      header={submission.courseTitle}>\n                                      <Table\n                                          data={submission.submissions}\n                                          style={{ fontSize: '13px' }}>\n                                          <Table.Column width={160} resizable>\n                                              <Table.HeaderCell>\n                                                  Submitted On\n                                              </Table.HeaderCell>\n                                              <Table.Cell resizable>\n                                                  {rowData => {\n                                                      const date = new Date(\n                                                          rowData.submittedOn\n                                                      ).toLocaleString();\n\n                                                      return <p>{date}</p>;\n                                                  }}\n                                              </Table.Cell>\n                                          </Table.Column>\n                                          <Table.Column width={160} resizable>\n                                              <Table.HeaderCell>\n                                                  Assignment Title\n                                              </Table.HeaderCell>\n                                              <Table.Cell\n                                                  resizable\n                                                  dataKey='assTitle'\n                                              />\n                                          </Table.Column>\n                                          <Table.Column width={120} resizable>\n                                              <Table.HeaderCell>\n                                                  Status\n                                              </Table.HeaderCell>\n                                              <Table.Cell resizable>\n                                                  {rowData => {\n                                                      return rowData.status ===\n                                                          'new' ? (\n                                                          <p\n                                                              style={{\n                                                                  color: 'red'\n                                                              }}>\n                                                              Pending Review\n                                                          </p>\n                                                      ) : (\n                                                          <p\n                                                              style={{\n                                                                  color: 'green'\n                                                              }}>\n                                                              Reviewed\n                                                          </p>\n                                                      );\n                                                  }}\n                                              </Table.Cell>\n                                          </Table.Column>\n                                          <Table.Column\n                                              width={160}\n                                              resizable\n                                              align='center'>\n                                              <Table.HeaderCell>\n                                                  Reviewed On\n                                              </Table.HeaderCell>\n                                              <Table.Cell resizable>\n                                                  {rowData => {\n                                                      const reviewedOn = rowData.reviewedOn\n                                                          ? new Date(\n                                                                rowData.reviewedOn\n                                                            ).toLocaleString()\n                                                          : null;\n\n                                                      return rowData.reviewedOn ? (\n                                                          <p>{reviewedOn}</p>\n                                                      ) : (\n                                                          <p\n                                                              style={{\n                                                                  color: 'green'\n                                                              }}>\n                                                              -\n                                                          </p>\n                                                      );\n                                                  }}\n                                              </Table.Cell>\n                                          </Table.Column>\n                                          <Table.Column\n                                              width={160}\n                                              resizable\n                                              align='center'>\n                                              <Table.HeaderCell>\n                                                  Marks\n                                              </Table.HeaderCell>\n                                              <Table.Cell resizable>\n                                                  {rowData => {\n                                                      return rowData.marks ? (\n                                                          <p\n                                                              style={{\n                                                                  fontWeight:\n                                                                      'bold'\n                                                              }}>\n                                                              {rowData.marks}%\n                                                          </p>\n                                                      ) : (\n                                                          <p\n                                                              style={{\n                                                                  color: 'green'\n                                                              }}>\n                                                              -\n                                                          </p>\n                                                      );\n                                                  }}\n                                              </Table.Cell>\n                                          </Table.Column>\n                                          <Table.Column\n                                              width={160}\n                                              resizable\n                                              align='center'>\n                                              <Table.HeaderCell>\n                                                  Instructor Comments\n                                              </Table.HeaderCell>\n                                              <Table.Cell resizable>\n                                                  {rowData => {\n                                                      return rowData.comments ? (\n                                                          <>\n                                                              <Button\n                                                                  id='showFeedback'\n                                                                  onClick={\n                                                                      this.open\n                                                                  }>\n                                                                  Show\n                                                              </Button>\n                                                              <Modal\n                                                                  backdrop='static'\n                                                                  show={\n                                                                      this.state\n                                                                          .show\n                                                                  }\n                                                                  onHide={\n                                                                      this.close\n                                                                  }\n                                                                  size='xs'>\n                                                                  <Modal.Body>\n                                                                      <>\n                                                                          <p>\n                                                                              Instructor\n                                                                              comments\n                                                                          </p>\n                                                                          <p id='feedback'>{\n                                                                              rowData.comments\n                                                                          }</p>\n                                                                      </>\n                                                                  </Modal.Body>\n                                                                  <Modal.Footer>\n                                                                      <Button\n                                                                          onClick={\n                                                                              this\n                                                                                  .close\n                                                                          }\n                                                                          appearance='primary'>\n                                                                          Close\n                                                                      </Button>\n                                                                  </Modal.Footer>\n                                                              </Modal>\n                                                          </>\n                                                      ) : (\n                                                          <p\n                                                              style={{\n                                                                  color: 'green'\n                                                              }}>\n                                                              -\n                                                          </p>\n                                                      );\n                                                  }}\n                                              </Table.Cell>\n                                          </Table.Column>{' '}\n                                          */}\n                                      </Table>\n                                  </Panel>\n                              );\n                          })\n                        : null}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default compose(withFirebase, withCourse)(StudentCoursePalette);\n","import React from 'react';\nimport AdminCoursePalette from './AdminCoursePalette';\nimport StudentCoursePalette from './StudentCoursePalette';\n\nclass CoursePanel extends React.Component{\n    render(){\n        const authUser = this.props.authUser;\n        return(\n            authUser.roles.userRole === 'admin'?\n                <AdminCoursePalette authUser={authUser}/>\n            : <StudentCoursePalette authUser={authUser}/> \n        )\n    }\n}\n\nexport default CoursePanel;","import React from 'react';\nimport { withAuthorization } from '../Session';\n\nimport AnnouncementsPanel from '../Announcements/AnnouncementsPanel';\nimport mainTemplate from '../Templates/MainTemplate';\nimport { Breadcrumb } from 'rsuite';\nimport CoursePanel from './MainPalette/CoursePanel';\n\nconst Header = (props) => (\n    <div>\n        <div style ={{position: 'absolute', right: 18, top: 10}}>\n            <AnnouncementsPanel {...props}/>\n        </div>\n    </div>\n)\n\nconst BreadCrumb = () => (\n    <Breadcrumb style={{fontSize: '12px'}}>\n        <Breadcrumb.Item active>Dashboard</Breadcrumb.Item>\n    </Breadcrumb>\n)\n\nconst Body = (props) => (\n    <div>\n        <div>\n            <CoursePanel {...props}/>\n        </div>\n    </div>\n)\n\nconst condition = authUser => !!authUser;\n\nconst WrappedComponents = mainTemplate(Header, BreadCrumb, Body);\n\nexport default withAuthorization(condition)(WrappedComponents);","import React from \"react\";\nimport {\n\tContainer,\n\tFormGroup,\n\tForm,\n\tInput,\n\tFormControl,\n\tControlLabel,\n\tSelectPicker,\n\tButton,\n\tButtonToolbar,\n\tAlert,\n\tUploader,\n\tIcon\n} from \"rsuite\";\n\nconst qualificationData = [\n\t{ label: \"Primary School\", value: \"primary-school\" },\n\t{ label: \"High School\", value: \"high-school\" },\n\t{ label: \"College\", value: \"college\" },\n\t{ label: \"Degree\", value: \"degree\" },\n\t{ label: \"Masters\", value: \"master\" },\n\t{ label: \"Other\", value: \"other\" }\n];\n\nconst difficultyLevel = [\n\t{ label: \"Fundamental\", value: \"fundamental\" },\n\t{ label: \"Intermediate\", value: \"intermediate\" },\n\t{ label: \"Advanced\", value: \"advanced\" },\n\t{ label: \"Fundamental-Intermediate\", value: \"fundamental-intermediate\" },\n\t{ label: \"Fundamental-Advanced\", value: \"fundamental-advanced\" },\n\t{ label: \"Other\", value: \"other\" }\n];\n\nconst durationAcceptor = ({ onChange }) => {\n\treturn (\n\t\t<Input\n\t\t\ttype=\"number\"\n\t\t\tonChange={e => {\n\t\t\t\tonChange(e);\n\t\t\t}}\n\t\t\tstyle={{ width: \"90px\" }}\n\t\t/>\n\t);\n};\n\nclass Body extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tshowError: false,\n\t\t\terrorPlacement: \"bottomStart\",\n\t\t\tformValue: {\n\t\t\t\ttitle: \"\",\n\t\t\t\tqualification: \"\",\n\t\t\t\tlevelOfStudy: \"\",\n\t\t\t\tduration: 0,\n\t\t\t\tdescription: \"\",\n\t\t\t\tprerequisite: \"\"\n\t\t\t},\n\t\t\tfeatureImage: null,\n\t\t\tuploading: false,\n\t\t\tcreateCourseBtnShow: false,\n\t\t};\n\t\tthis.formSubmit = this.formSubmit.bind(this);\n\t}\n\n\tformSubmit() {\n\t\tthis.setState({createCourseBtnShow: true});\n\n\t\tconst {\n\t\t\ttitle,\n\t\t\tqualification,\n\t\t\tlevelOfStudy,\n\t\t\tduration,\n\t\t\tdescription,\n\t\t\tprerequisite\n\t\t} = this.state.formValue;\n\t\tconst uid = this.props.firebase.auth.currentUser.uid;\n\t\tif (\n\t\t\t!title ||\n\t\t\t!qualification ||\n\t\t\t!levelOfStudy ||\n\t\t\t!duration ||\n\t\t\t!description ||\n\t\t\t!prerequisite ||\n\t\t\t!this.state.setFileInfo\n\t\t) {\n\t\t\tAlert.error(\"Please fill in all fields.\", 5000);\n\t\t\tthis.setState({createCourseBtnShow: false});\n\t\t} else {\n\t\t\tthis.props.firebase\n\t\t\t\t.courses()\n\t\t\t\t.push(\n\t\t\t\t\t{\n\t\t\t\t\t\tcreatedBy: uid,\n\t\t\t\t\t\ttitle,\n\t\t\t\t\t\tqualification,\n\t\t\t\t\t\tlevelOfStudy,\n\t\t\t\t\t\tduration,\n\t\t\t\t\t\tdescription,\n\t\t\t\t\t\tprerequisite,\n\t\t\t\t\t\timage: this.state.setFileInfo\n\t\t\t\t\t},\n\t\t\t\t\terr => {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\tAlert.error(\n\t\t\t\t\t\t\t\t\"An error occurred while creating course. Please try again.\",\n\t\t\t\t\t\t\t\t5000\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tthis.setState({createCourseBtnShow: false});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t\t.then(rsp => {\n\t\t\t\t\tconst courseId = rsp.key.substr(1, rsp.key.length);\n\t\t\t\t\tthis.props.firebase\n\t\t\t\t\t\t.user(uid)\n\t\t\t\t\t\t.child(\"coursesCreated\")\n\t\t\t\t\t\t.push({ courseId });\n\t\t\t\t\tthis.props.history.push(`/courses/${courseId}`);\n\t\t\t\t})\n\t\t\t\t.catch(err =>{\n\t\t\t\t\tconsole.log(err);\n\t\t\t\t})\n\t\t}\n\t}\n\n\tpreviewFile(file, callback) {\n\t\tconst reader = new FileReader();\n\t\treader.onloadend = () => {\n\t\t\tcallback(reader.result);\n\t\t};\n\t\treader.readAsDataURL(file);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Container style={{ flex: 1, flexDirection: \"column\" }}>\n\t\t\t\t\t<Container style={{ alignItems: \"center\" }}>\n\t\t\t\t\t\t<Uploader\n\t\t\t\t\t\t\tdragable\n\t\t\t\t\t\t\tfileListVisible={false}\n\t\t\t\t\t\t\tlistType=\"picture\"\n\t\t\t\t\t\t\t// action=\"//jsonplaceholder.typicode.com/posts/\"\n\t\t\t\t\t\t\tonUpload={file => {\n\t\t\t\t\t\t\t\tthis.setState({ uploading: true });\n\t\t\t\t\t\t\t\tthis.previewFile(file.blobFile, value => {\n\t\t\t\t\t\t\t\t\tthis.setState({ setFileInfo: value });\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonError={() => {\n\t\t\t\t\t\t\t\t// Alert.error(\"Upload Failed. Please try again.\");\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Button style={{ width: \"150px\", height: \"150px\" }}>\n\t\t\t\t\t\t\t\t{this.state.setFileInfo ? (\n\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\tsrc={this.state.setFileInfo}\n\t\t\t\t\t\t\t\t\t\twidth=\"100%\"\n\t\t\t\t\t\t\t\t\t\theight=\"100%\"\n\t\t\t\t\t\t\t\t\t\talt=\"\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<Icon icon=\"image\" size=\"5x\" />\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Uploader>\n\t\t\t\t\t</Container>\n\t\t\t\t\t<Container>\n\t\t\t\t\t\t<Form fluid onChange={formValue => this.setState({ formValue })}>\n\t\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t\t<ControlLabel>Course Title</ControlLabel>\n\t\t\t\t\t\t\t\t<FormControl name=\"title\" />\n\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t\t<ControlLabel>Qualification</ControlLabel>\n\t\t\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\t\t\tname=\"qualification\"\n\t\t\t\t\t\t\t\t\taccepter={SelectPicker}\n\t\t\t\t\t\t\t\t\tplaceholder=\"Default\"\n\t\t\t\t\t\t\t\t\tdata={qualificationData}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t\t<ControlLabel>Level</ControlLabel>\n\t\t\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\t\t\tname=\"levelOfStudy\"\n\t\t\t\t\t\t\t\t\taccepter={SelectPicker}\n\t\t\t\t\t\t\t\t\tplaceholder=\"Default\"\n\t\t\t\t\t\t\t\t\tdata={difficultyLevel}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t\t<ControlLabel>Duration (Hours)</ControlLabel>\n\t\t\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\t\t\tname=\"duration\"\n\t\t\t\t\t\t\t\t\taccepter={durationAcceptor}\n\t\t\t\t\t\t\t\t\tplaceholder=\"0\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t\t<ControlLabel>Course Description</ControlLabel>\n\t\t\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\t\t\trows={5}\n\t\t\t\t\t\t\t\t\tname=\"description\"\n\t\t\t\t\t\t\t\t\tcomponentClass=\"textarea\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t\t<ControlLabel>Prerequisites</ControlLabel>\n\t\t\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\t\t\trows={5}\n\t\t\t\t\t\t\t\t\tname=\"prerequisite\"\n\t\t\t\t\t\t\t\t\tcomponentClass=\"textarea\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"Eg. Basic business knowledge\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t\t<ButtonToolbar>\n\t\t\t\t\t\t\t\t\t<Button disabled={this.state.createCourseBtnShow} appearance=\"ghost\" onClick={this.formSubmit}>\n\t\t\t\t\t\t\t\t\t\tCreate\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</ButtonToolbar>\n\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t</Container>\n\t\t\t\t</Container>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Body;","import React from 'react';\nimport {compose} from 'recompose';\nimport mainTemplate from '../../Templates/MainTemplate'\nimport {withFirebase} from '../../Firebase';\nimport {withAuthorization} from '../../Session'\nimport {NavLink} from 'react-router-dom';\nimport AnnouncementsPanel from '../../Announcements/AnnouncementsPanel';\nimport { Breadcrumb } from 'rsuite';\nimport Body from './Body';\n\nconst Header = (props) => (\n    <div>\n        <div style ={{position: 'absolute', right: 18, top: 10}}>\n            <AnnouncementsPanel {...props}/>\n        </div>\n    </div>\n)\n\nconst BreadCrumb = () => (\n    <Breadcrumb style={{fontSize: '12px'}}>\n        <NavLink to=\"/dashboard\">Dashboard</NavLink>\n        <NavLink to=\"/courses\">Courses</NavLink>\n        <Breadcrumb.Item active>Add New Course</Breadcrumb.Item>\n    </Breadcrumb>\n)\n\nconst condition = authUser => authUser && !!(authUser.roles['userRole'] === 'admin');\n\nlet AddCoursePage = mainTemplate(Header, BreadCrumb, Body);\n\nexport default compose(\n    withAuthorization(condition),\n    withFirebase,\n)(AddCoursePage);\n\n","import React from \"react\";\nimport {\n\tContainer,\n\tFormGroup,\n\tForm,\n\tFormControl,\n\tControlLabel,\n\tSelectPicker,\n\tButton,\n\tButtonToolbar,\n\tAlert,\n\tUploader,\n\tInputNumber,\n} from \"rsuite\";\n\nconst qualificationData = [\n\t{ label: \"Primary School\", value: \"primary-school\" },\n\t{ label: \"High School\", value: \"high-school\" },\n\t{ label: \"College\", value: \"college\" },\n\t{ label: \"Degree\", value: \"degree\" },\n\t{ label: \"Masters\", value: \"master\" },\n\t{ label: \"Other\", value: \"other\" }\n];\n\nconst difficultyLevel = [\n\t{ label: \"Fundamental\", value: \"fundamental\" },\n\t{ label: \"Intermediate\", value: \"intermediate\" },\n\t{ label: \"Advanced\", value: \"advanced\" },\n\t{ label: \"Fundamental-Intermediate\", value: \"fundamental-intermediate\" },\n\t{ label: \"Fundamental-Advanced\", value: \"fundamental-advanced\" },\n\t{ label: \"Other\", value: \"other\" }\n];\n\nclass Body extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tcourse: null,\n\t\t\tshowError: false,\n\t\t\terrorPlacement: \"bottomStart\",\n\t\t\tformValue: {\n\t\t\t\ttitle: \"\",\n\t\t\t\tqualification: \"\",\n\t\t\t\tlevelOfStudy: \"\",\n\t\t\t\tdescription: \"\",\n\t\t\t\tprerequisite: \"\"\n\t\t\t},\n\t\t\tfeatureImage: null,\n\t\t\tuploading: false,\n\t\t\tsetFileInfo: null,\n\t\t};\n\t\tthis.formSubmit = this.formSubmit.bind(this);\n\t\tthis.retrievePageCourse = this.retrievePageCourse.bind(this);\n\t}\n\n\tretrievePageCourse(id) {\n        const coursesList = this.props.coursesList? this.props.coursesList : [];\n        if(coursesList){\n            let foundCourse = null;\n            for (let i = 0; i < coursesList.length; i++) {\n                if (coursesList[i].uid === `-${id}`) {\n                    foundCourse = coursesList[i];\n                    break;\n                }\n            }\n            this.setState({ course: foundCourse });\n        }\n\t}\n\t\n\tformSubmit() {\n\t\tconst formValue = this.state.formValue;\n\t\tconst course = this.state.course;\n\n\t\tconst formValueKeys = Object.keys(formValue);\n\n\t\tformValueKeys.forEach(key=> {\n\t\t\tif(formValue[key]){\n\t\t\t\tcourse[key]\t= formValue[key]\n\t\t\t}\n\t\t})\n\n\t\tthis.props.firebase\n\t\t\t.course(`-${this.props.match.params.id}`)\n\t\t\t.update(\n\t\t\t\t{\n\t\t\t\t\ttitle: course.title,\n\t\t\t\t\tqualification: course.qualification,\n\t\t\t\t\tlevelOfStudy: course.levelOfStudy,\n\t\t\t\t\tdescription: course.description,\n\t\t\t\t\tprerequisite: course.prerequisite,\n\t\t\t\t\timage: this.state.setFileInfo? this.state.setFileInfo : course.image\n\t\t\t\t},\n\t\t\t\terr => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tAlert.error(\n\t\t\t\t\t\t\t\"An error occurred while creating course. Please try again.\",\n\t\t\t\t\t\t\t5000\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t)\n\t\t\t.then(rsp => {\n\t\t\t\tthis.props.history.push(`/courses/${this.props.match.params.id}`);\n\t\t\t});\n\t\t\n\t}\n\n\tpreviewFile(file, callback) {\n\t\tconst reader = new FileReader();\n\t\treader.onloadend = () => {\n\t\t\tcallback(reader.result);\n\t\t};\n\t\treader.readAsDataURL(file);\n\t}\n\n\tcomponentDidMount(){\n\t\tthis.retrievePageCourse(this.props.match.params.id);\n\t}\n\n\trender() {\n\t\tconst course = this.state.course? this.state.course: null;\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{course?\n\t\t\t\t\t<Container style={{ flex: 1, flexDirection: \"column\" }}>\n\t\t\t\t\t\t<Container style={{ alignItems: \"center\" }}>\n\t\t\t\t\t\t\t<Uploader\n\t\t\t\t\t\t\t\tdragable={true}\n\t\t\t\t\t\t\t\tlistType=\"picture\"\n\t\t\t\t\t\t\t\tfileListVisible={false}\n\t\t\t\t\t\t\t\taction=\"/\"\n\t\t\t\t\t\t\t\tonUpload={file => {\n\t\t\t\t\t\t\t\t\tthis.setState({ uploading: true });\n\t\t\t\t\t\t\t\t\tthis.previewFile(file.blobFile, value => {\n\t\t\t\t\t\t\t\t\t\tthis.setState({ setFileInfo: value});\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Button style={{ width: \"150px\", height: \"150px\" }}>\n\t\t\t\t\t\t\t\t{this.state.setFileInfo ? (\n\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\tsrc={this.state.setFileInfo}\n\t\t\t\t\t\t\t\t\t\twidth=\"100%\"\n\t\t\t\t\t\t\t\t\t\theight=\"100%\"\n\t\t\t\t\t\t\t\t\t\talt=\"\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<img src={course.image} alt='' style={{ width: \"150px\", height: \"150px\" }}/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Button>\t\n\t\t\t\t\t\t\t</Uploader>\n\t\t\t\t\t\t</Container>\n\n\t\t\t\t\t\t<Container>\n\t\t\t\t\t\t\t<Form fluid onChange={formValue => this.setState({ formValue })}>\n\t\t\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t\t\t<ControlLabel>Course Title</ControlLabel>\n\t\t\t\t\t\t\t\t\t<FormControl \n\t\t\t\t\t\t\t\t\t\tname=\"title\" \n\t\t\t\t\t\t\t\t\t\tvalue={this.state.formValue.title? this.state.formValue.title: course.title}/>\n\t\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t\t\t<ControlLabel>Qualification</ControlLabel>\n\t\t\t\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\t\t\t\tname=\"qualification\"\n\t\t\t\t\t\t\t\t\t\taccepter={SelectPicker}\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Default\"\n\t\t\t\t\t\t\t\t\t\tdata={qualificationData}\n\t\t\t\t\t\t\t\t\t\tvalue={this.state.formValue.qualification? this.state.formValue.qualification: course.qualification}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t\t\t<ControlLabel>Level</ControlLabel>\n\t\t\t\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\t\t\t\tname=\"levelOfStudy\"\n\t\t\t\t\t\t\t\t\t\taccepter={SelectPicker}\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Default\"\n\t\t\t\t\t\t\t\t\t\tdata={difficultyLevel}\n\t\t\t\t\t\t\t\t\t\tvalue={this.state.formValue.levelOfStudy? this.state.formValue.levelOfStudy: course.levelOfStudy}\n\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t\t\t<ControlLabel>Duration (Hours)</ControlLabel>\n\t\t\t\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: \"90px\" }}\n\t\t\t\t\t\t\t\t\t\tname=\"duration\"\n\t\t\t\t\t\t\t\t\t\taccepter={InputNumber}\n\t\t\t\t\t\t\t\t\t\tvalue={this.state.formValue.duration? this.state.formValue.duration: course.duration}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t\t\t<ControlLabel>Course Description</ControlLabel>\n\t\t\t\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\t\t\t\trows={5}\n\t\t\t\t\t\t\t\t\t\tname=\"description\"\n\t\t\t\t\t\t\t\t\t\tcomponentClass=\"textarea\"\n\t\t\t\t\t\t\t\t\t\tvalue={this.state.formValue.description? this.state.formValue.description: course.description}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t\t\t<ControlLabel>Prerequisites</ControlLabel>\n\t\t\t\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\t\t\t\trows={5}\n\t\t\t\t\t\t\t\t\t\tname=\"prerequisite\"\n\t\t\t\t\t\t\t\t\t\tcomponentClass=\"textarea\"\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Eg. Basic business knowledge\"\n\t\t\t\t\t\t\t\t\t\tvalue={this.state.formValue.prerequisite? this.state.formValue.prerequisite: course.prerequisite}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t\t\t<ButtonToolbar>\n\t\t\t\t\t\t\t\t\t\t<Button id='saveBtn' appearance=\"ghost\" onClick={this.formSubmit}>\n\t\t\t\t\t\t\t\t\t\t\tSave\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</ButtonToolbar>\n\t\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t</Container>\n\t\t\t\t\t</Container>\n\t\t\t\t: <p>Loading...</p>\t\n\t\t\t}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Body;","import React from 'react';\nimport {compose} from 'recompose';\nimport mainTemplate from '../../Templates/MainTemplate'\nimport {withFirebase} from '../../Firebase';\nimport {withAuthorization} from '../../Session'\nimport {NavLink} from 'react-router-dom';\nimport AnnouncementsPanel from '../../Announcements/AnnouncementsPanel';\nimport { Breadcrumb } from 'rsuite';\nimport Body from './Body';\nimport withCourse from '../Context/withCourse';\n\nconst Header = (props) => (\n    <div>\n        <div style ={{position: 'absolute', right: 18, top: 10}}>\n            <AnnouncementsPanel {...props}/>\n        </div>\n    </div>\n)\n\nconst BreadCrumb = () => (\n    <Breadcrumb style={{fontSize: '12px'}}>\n        <NavLink to=\"/dashboard\">Dashboard</NavLink>\n        <NavLink to=\"/courses\">Courses</NavLink>\n        <Breadcrumb.Item active>Edit Course</Breadcrumb.Item>\n    </Breadcrumb>\n)\n\nconst condition = authUser => authUser && !!(authUser.roles['userRole'] === 'admin');\n\nlet EditCoursePage = mainTemplate(Header, BreadCrumb, Body);\n\nexport default compose(\n    withAuthorization(condition),\n    withCourse,\n    withFirebase,\n)(EditCoursePage);\n\n","import React from \"react\";\nimport {\n\tModal,\n\tForm,\n\tFormGroup,\n\tControlLabel,\n\tFormControl,\n\tContainer,\n\tButton,\n\tButtonToolbar,\n\tAlert,\n\tToggle,\n} from \"rsuite\";\n\nexport default class CurriculumModal extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\teditorContext: null,\n\t\t\tcontent: null,\n\t\t\tformValue: {\n\t\t\t\ttitle: \"\",\n\t\t\t\tshortDescription: \"\",\n\t\t\t\tallowPreview: false,\n\t\t\t}\n\t\t};\n\t\tthis.formSubmit = this.formSubmit.bind(this);\n\t}\n\n\tclose() {\n\t\tthis.setState({ show: false });\n\t}\n\topen(size) {\n\t\tthis.setState({ show: true });\n\t}\n\n\tonDanteSaveHandler(editorContext, content) {\n\t\tthis.setState({ editorContext, content });\n\t}\n\n\tformSubmit() {\n\t\tlet { title, shortDescription, allowPreview } = this.state.formValue;\n\t\tconst courseId = this.props.match.params.id;\n\t\tallowPreview = !!(allowPreview);\n\n\t\tif (!title || !shortDescription) {\n\t\t\tAlert.error(\"Title and description cannot be empty.\", 5000);\n\t\t} else {\n\t\t\tthis.props.firebase\n\t\t\t\t.courseCurriculums(`-${courseId}`)\n\t\t\t\t.push({ title, shortDescription, allowPreview }, err => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tAlert.error(\n\t\t\t\t\t\t\t\"An error occurred while creating curriculum. Please try again.\",\n\t\t\t\t\t\t\t5000\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.then(rsp => {\n\t\t\t\t\tconst curriculumId = rsp.key.substr(1, rsp.key.length);\n\t\t\t\t\tthis.props.history.push(\n\t\t\t\t\t\t`/courses/${courseId}/curriculum/${curriculumId}`\n\t\t\t\t\t);\n\t\t\t});\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"modal-container\">\n\t\t\t\t<Modal.Header>\n\t\t\t\t\t<Modal.Title>Add Curriculum</Modal.Title>\n\t\t\t\t</Modal.Header>\n\n\t\t\t\t<Modal.Body>\n\t\t\t\t\t<Container style={{ height: \"100%\" }}>\n\t\t\t\t\t\t<Form fluid onChange={formValue => this.setState({ formValue })}>\n\t\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t\t<ControlLabel>Title</ControlLabel>\n\t\t\t\t\t\t\t\t<FormControl name=\"title\" />\n\t\t\t\t\t\t\t</FormGroup>\n\n\t\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t\t<ControlLabel>Short Description</ControlLabel>\n\t\t\t\t\t\t\t\t<FormControl name=\"shortDescription\" />\n\t\t\t\t\t\t\t</FormGroup>\n\n\t\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t\t<ControlLabel>Allow Preview?</ControlLabel>\n\t\t\t\t\t\t\t\t<p style={{fontSize:'10px', fontStyle: 'italic', padding: '3px'}}>Enabling this option will allow non-login users to access the curriculum.</p>\n\t\t\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\t\t\tname=\"allowPreview\"\n\t\t\t\t\t\t\t\t\tdefaultValue=\"false\"\n\t\t\t\t\t\t\t\t\taccepter={Toggle}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</FormGroup>\n\n\t\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t\t<ButtonToolbar style={{ textAlign: \"center\" }}>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tappearance=\"ghost\"\n\t\t\t\t\t\t\t\t\t\tonClick={this.formSubmit}\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: \"100px\" }}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tNext\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</ButtonToolbar>\n\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t</Container>\n\t\t\t\t</Modal.Body>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React from 'react';\nimport {\n    Modal,\n    Container,\n    Uploader,\n    Form,\n    FormGroup,\n    FormControl,\n    ControlLabel,\n    SelectPicker,\n    Button,\n    ButtonToolbar,\n    Alert,\n    Progress\n} from 'rsuite';\n\nconst { Line } = Progress;\n\nexport default class AssignmentModal extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            curriculum: [],\n            formValue: {\n                title: '',\n                curriculum: '',\n                type: '',\n                uploaded: false\n            },\n            assFile: null,\n            uploaderDisabled: false,\n            uploadProgressShow: false,\n            uploadProgress: 0\n        };\n\n        this.onUploadChange = this.onUploadChange.bind(this);\n        this.getCurriculums = this.getCurriculums.bind(this);\n        this.formSubmit = this.formSubmit.bind(this);\n        this.formNext = this.formNext.bind(this);\n    }\n\n    getCurriculums() {\n        //Get curriculums\n        this.props.firebase\n            .courseCurriculums('-' + this.props.match.params.id)\n            .once('value')\n            .then(snapshot => {\n                const curriculums = snapshot.val();\n\n                if (curriculums) {\n                    const objKeys = Object.keys(curriculums);\n                    let curriculum = [];\n\n                    objKeys.forEach(item => {\n                        const obj = {\n                            value: item,\n                            label: curriculums[item].title.trim()\n                        };\n                        curriculum.push(obj);\n                        this.setState({ curriculum });\n                    });\n                }\n            });\n    }\n\n    componentDidMount() {\n        this.getCurriculums();\n    }\n\n    onUploadChange(file) {\n        if (this.state.assFile) {\n            this.setState({\n                assFile: null\n            });\n        } else {\n            this.setState({\n                assFile: file\n            });\n        }\n    }\n\n    formSubmit() {\n        const { title, curriculum, type } = this.state.formValue;\n        const courseId = '-' + this.props.match.params.id;\n        const { assFile } = this.state;\n\n        const timestamp = Date.now();\n        if (!title || !assFile || !curriculum) {\n            Alert.error('Please fill in all fields.');\n        } else {\n            const upload = this.props.firebase\n                .assignmentRef()\n                .child(\n                    `${this.props.courseTitle}/${timestamp}_${assFile[0].blobFile.name}`\n                )\n                .put(assFile[0].blobFile);\n\n            upload.on(\n                'state_changed',\n                snapshot => {\n                    let uploadProgress =\n                        (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n                    this.setState({ uploadProgressShow: true, uploadProgress });\n                },\n                () => {\n                    Alert.error('Upload failed...Please try again...');\n                },\n\n                async () => {\n                    //Uploaded Successfully...\n                    Alert.success('Created successfully');\n                    this.setState({ uploaded: true });\n                    const url = await upload.snapshot.ref\n                        .getDownloadURL()\n                        .then(downloadURL => {\n                            return downloadURL;\n                        });\n\n                    //Store to realtime db\n                    this.props.firebase\n                        .course(courseId)\n                        .child('assignments')\n                        .push(\n                            {\n                                curriId: curriculum.substr(1),\n                                title,\n                                type,\n                                attachmentUrl: url\n                            },\n                            err => {\n                                if (err) {\n                                    Alert.error(\n                                        'An error occured while creating assignment. Please try again.',\n                                        5000\n                                    );\n                                }\n                            }\n                        )\n                        .then(rsp => {\n                            window.location.reload(false);\n                        });\n                }\n            );\n        }\n    }\n\n    formNext() {\n        const { title, curriculum, type } = this.state.formValue;\n        const courseId = '-' + this.props.match.params.id;\n\n        if (!title || !curriculum) {\n            Alert.error('Please fill in all fields.');\n        } else {\n            this.props.firebase\n                .course(courseId)\n                .child('assignments')\n                .push(\n                    {\n                        curriId: curriculum,\n                        title,\n                        type\n                    },\n                    err => {\n                        if (err) {\n                            Alert.error(\n                                'An error occured while creating assignment. Please try again.',\n                                5000\n                            );\n                        }\n                    }\n                )\n                .then(rsp => {\n                    const assKey = rsp.key.substr(1);\n\n                    this.props.history.push(\n                        `/courses/${courseId.substr(1)}/assignment/${assKey}`\n                    );\n                });\n        }\n    }\n\n    render() {\n        const { curriculum } = this.state;\n        const { assFile } = this.state;\n        const uploaderDisabled = assFile ? true : false;\n\n        return (\n            <div>\n                <Modal.Header>\n                    <Modal.Title>Create an Assignment</Modal.Title>\n\n                    <Modal.Body>\n                        <Container>\n                            <Form\n                                fluid\n                                onChange={formValue =>\n                                    this.setState({ formValue })\n                                }>\n                                <FormGroup>\n                                    <ControlLabel>\n                                        Assignment Title\n                                    </ControlLabel>\n                                    <FormControl name='title' />\n                                </FormGroup>\n\n                                <FormGroup>\n                                    <ControlLabel>\n                                        Assign assignment to curriculum:{' '}\n                                    </ControlLabel>\n                                    <FormControl\n                                        name='curriculum'\n                                        accepter={SelectPicker}\n                                        placeholder='-'\n                                        data={curriculum}\n                                    />\n                                </FormGroup>\n\n                                <FormGroup>\n                                    <ControlLabel>\n                                        Assignment type:{' '}\n                                    </ControlLabel>\n                                    <FormControl\n                                        name='type'\n                                        accepter={SelectPicker}\n                                        placeholder='-'\n                                        data={assignmentType}\n                                    />\n                                </FormGroup>\n\n                                {this.state.formValue.type === 'file' ? (\n                                    <FormGroup>\n                                        <ControlLabel>\n                                            Assignment File (Optional):{' '}\n                                        </ControlLabel>\n                                        <Uploader\n                                            disabled={uploaderDisabled}\n                                            autoUpload={false}\n                                            dragable={true}\n                                            action='/'\n                                            onChange={this.onUploadChange}\n                                            style={{\n                                                border: '1px dashed #a4a9b3',\n                                                overflowY: 'scroll',\n                                                maxHeight: '140px'\n                                            }}>\n                                            {uploaderDisabled ? (\n                                                <div\n                                                    style={{\n                                                        lineHeight: '80px',\n                                                        width: '100%'\n                                                    }}>\n                                                    Max one(1) file uploaded.\n                                                </div>\n                                            ) : (\n                                                <div\n                                                    style={{\n                                                        lineHeight: '80px',\n                                                        width: '100%'\n                                                    }}>\n                                                    Click or Drag assignment to\n                                                    this area to upload\n                                                </div>\n                                            )}\n                                        </Uploader>\n                                        {this.state.uploadProgressShow ? (\n                                            <Line\n                                                percent={\n                                                    this.state.uploadProgress\n                                                }\n                                                status='success'\n                                            />\n                                        ) : (\n                                            ''\n                                        )}\n                                    </FormGroup>\n                                ) : null}\n\n                                <FormGroup>\n                                    {this.state.formValue.type ? (\n                                        <ButtonToolbar\n                                            style={{ textAlign: 'center' }}>\n                                            {this.state.formValue.type ===\n                                            'file' ? (\n                                                <Button\n                                                    appearance='ghost'\n                                                    disabled={\n                                                        this.state.uploaded\n                                                    }\n                                                    onClick={this.formSubmit}\n                                                    style={{ width: '100px' }}>\n                                                    Create\n                                                </Button>\n                                            ) : (\n                                                <Button\n                                                    appearance='ghost'\n                                                    onClick={this.formNext}\n                                                    style={{ width: '100px' }}>\n                                                    Next\n                                                </Button>\n                                            )}\n                                        </ButtonToolbar>\n                                    ) : (\n                                        <Button\n                                            appearance='ghost'\n                                            disabled={true}\n                                            style={{ width: '100px' }}>\n                                            Create\n                                        </Button>\n                                    )}\n                                </FormGroup>\n                            </Form>\n                        </Container>\n                    </Modal.Body>\n                </Modal.Header>\n            </div>\n        );\n    }\n}\n\nconst assignmentType = [\n    {\n        value: 'file',\n        label: 'Attachment only'\n    },\n    {\n        value: 'subjective',\n        label: 'Subjective'\n    }\n];\n","import React from 'react';\nimport {\n\tContainer,\n\tButton,\n\tIcon,\n\tPanel,\n\tPanelGroup,\n\tModal,\n\tAlert,\n\tLoader,\n\tTable\n} from 'rsuite';\nimport CurriculumModal from './Curriculum/CurriculumModal';\nimport { NavLink, Link } from 'react-router-dom';\nimport AssignmentModal from './Assignment/AssignmentModal';\n\nexport default class Body extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n            course                  : null,\n            loading                 : true,\n            authUser                : null,\n            panelNavigate           : '',\n\t\t\tshowCurriculumModal     : false,\n\t\t\tshowAssignmentModal     : false,\t\t\t\n\t\t};\n\n\t\tthis.panelSelect            = this.panelSelect.bind(this);\n\t\tthis.enrollCourse           = this.enrollCourse.bind(this);\n\t\tthis.renderCurriculum       = this.renderCurriculum.bind(this);\n\t\tthis.retrievePageCourse     = this.retrievePageCourse.bind(this);\n\t\tthis.curriculumModalToggle  = this.curriculumModalToggle.bind(this);\n\t\tthis.assignmentModalToggle  = this.assignmentModalToggle.bind(this);\n\t}\n\tcomponentWillMount() {\n\t\tthis.retrievePageCourse(this.props.match.params.id);\n\t\twindow.scrollTo(0, 0);\n\t}\n\n\tretrievePageCourse(id) {\n\t\tconst coursesList = this.props.coursesList\n\t\t\t? this.props.coursesList\n            : [];\n            \n\t\tif (coursesList) {\n            let foundCourse = null;\n            \n\t\t\tfor (let i = 0; i < coursesList.length; i++) {\n\t\t\t\tif (coursesList[i].uid === `-${id}`) {\n\t\t\t\t\tfoundCourse = coursesList[i];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n            }\n            \n\t\t\tthis.setState({ course: foundCourse });\n\t\t}\n\t}\n\n\tpanelSelect(key) {\n\t\tthis.setState({ panelNavigate: key });\n\t}\n\n\tcurriculumModalToggle() {\n\t\tthis.setState({ showCurriculumModal: !this.state.showCurriculumModal });\n\t}\n\n\tassignmentModalToggle() {\n\t\tthis.setState({ showAssignmentModal: !this.state.showAssignmentModal });\n\t}\n\n\trenderEnrollButton(isCourseCreator, authUser, enrolledToCourse, courseId) {\n\t\tif (isCourseCreator) {\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t<Link\n\t\t\t\t\t\tto={{\n\t\t\t\t\t\t\tpathname: `/course/edit/${this.props.match.params.id}`,\n\t\t\t\t\t\t\tstate: {\n\t\t\t\t\t\t\t\tcourse: this.state.course\n\t\t\t\t\t\t\t\t\t? this.state.course\n\t\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tappearance='ghost'\n\t\t\t\t\t\t\tcolor='yellow'\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\t\t\theight: '55px'\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t<p style={{ fontSize: '16px' }}>Edit Course</p>\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Link>\n\t\t\t\t</>\n\t\t\t);\n\t\t} else if (\n\t\t\t(authUser && authUser.roles.userRole === 'admin') || enrolledToCourse) {\n\t\t\treturn (\n\t\t\t\t<Button\n\t\t\t\t\tappearance='default'\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\theight: '55px',\n\t\t\t\t\t\tcolor: '#202020'\n\t\t\t\t\t}}>\n\t\t\t\t\t<p id=\"enrolled\" style={{ fontSize: '16px' }}>Enrolled</p>\n\t\t\t\t</Button>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<Button\n\t\t\t\t\tappearance='ghost'\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\theight: '55px'\n\t\t\t\t\t}}\n\t\t\t\t\tid='enrollCourse'\n\t\t\t\t\tonClick={this.enrollCourse}>\n\t\t\t\t\t<p style={{ fontSize: '16px' }}>Enroll Course</p>\n\t\t\t\t</Button>\n\t\t\t);\n\t\t}\n\t}\n\n\tenrollCourse() {\n\t\tconst authUser = this.state.authUser;\n\n\t\tif (!authUser) {\n\t\t\tAlert.error('Login first')\n\t\t\tthis.props.history.push('/login');\n\t\t} else {\n\t\t\tthis.props.firebase\n\t\t\t\t.user(authUser.uid)\n\t\t\t\t.child('enrolledCourses')\n\t\t\t\t.push({ courseId: this.props.match.params.id }, err => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tAlert.error(\n\t\t\t\t\t\t\t'There was an error registering to courses...'\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.then(rsp => {\n\t\t\t\t\tconst date = Date.now();\n\n\t\t\t\t\tAlert.success('Successfully enrolled to course.');\n\t\t\t\t\tthis.props.firebase.course(`-${this.props.match.params.id}`).child('students').push({\n\t\t\t\t\t\tstudId: authUser.uid,\n\t\t\t\t\t\tjoinedOn: date,\n\t\t\t\t\t})\n\t\t\t\t});\n\t\t}\n\t}\n\n\trenderCurriculum( allowPreview, isCourseCreator, item, enrolledToCourse) {\n        if (allowPreview || isCourseCreator || enrolledToCourse) {\n\t\t\treturn (\n\t\t\t\t<NavLink\n\t\t\t\t\tto={`/courses/${this.props.match.params.id}/curriculum/${item.curriculumId}`}>\n\t\t\t\t\t{item.shortDescription}\n\t\t\t\t</NavLink>\n\t\t\t);\n\t\t} else {\n\t\t\treturn <p>{item.shortDescription}</p>;\n\t\t}\n\t}\n\n\trenderAssignments = (assignment) => {\n\t\treturn(\n\t\t\t<NavLink\n\t\t\t\tto={`/courses/${this.props.match.params.id}/assignment/${assignment.assignmentId.substr(1)}`}>\n\t\t\t\t{assignment.title}\n\t\t\t</NavLink>\n\t\t)\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.listener = this.props.firebase.onAuthUserListener(\n\t\t\tauthUser => {\n\t\t\t\treturn this.setState({ authUser, loading: false });\n\t\t\t},\n\t\t\t() => {\n\t\t\t\tthis.setState({ authUser: null, loading: false });\n\t\t\t}\n\t\t);\n\t}\n\n\trender() {\n\t\tlet coursesCreated      = null;\n\t\tlet enrolledToCourse    = null;\n\t\tlet isCourseCreator     = null;\n\t\tconst courseId          = this.props.match.params.id;\n\t\tconst authUser          = this.state.authUser ? this.state.authUser : null;\n\t\tconsole.log(this.state.course)\n\t\tlet {\n\t\t\tlevelOfStudy,\n\t\t\tdescription,\n\t\t\timage,\n\t\t\tduration,\n\t\t\tprerequisite,\n\t\t\ttitle,\n\t\t\tcurriculum,\n\t\t\tassignments,\n\t\t\tqualification\n\t\t} = this.state.course ? this.state.course : {};\n\n\t\tif (this.state.course) {\n\t\t\tif (curriculum) {\n\t\t\t\tcurriculum = Object.keys(curriculum).map(key => ({\n\t\t\t\t\t...curriculum[key],\n\t\t\t\t\tcurriculumId: key.substr(1)\n\t\t\t\t}));\n\t\t\t}\n\n\t\t\tif(assignments){\n\t\t\t\tassignments = Object.keys(assignments).map(key => ({\n\t\t\t\t\t...assignments[key],\n\t\t\t\t\tassignmentId: key\n\t\t\t\t}));\n\t\t\t}\n\n\t\t\tif (authUser && !!authUser.coursesCreated) {\n\t\t\t\tcoursesCreated = Object.keys(authUser.coursesCreated).map(\n\t\t\t\t\tkey => ({\n\t\t\t\t\t\t...authUser.coursesCreated[key],\n\t\t\t\t\t\tuid: key\n\t\t\t\t\t})\n\t\t\t\t);\n\n\t\t\t\tcoursesCreated = coursesCreated.map(item => {\n\t\t\t\t\treturn item.courseId;\n\t\t\t\t});\n\n\t\t\t\tisCourseCreator = coursesCreated.includes(\n\t\t\t\t\tthis.props.match.params.id\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tif (authUser && authUser.enrolledCourses) {\n\t\t\tenrolledToCourse = authUser.enrolledCourses;\n\t\t\tconst keys = Object.keys(enrolledToCourse);\n\n\t\t\tenrolledToCourse = keys.map(key => {\n\t\t\t\treturn enrolledToCourse[key];\n\t\t\t});\n\n\t\t\tenrolledToCourse = enrolledToCourse.map(item => {\n\t\t\t\treturn item.courseId;\n\t\t\t});\n\n\t\t\tenrolledToCourse = enrolledToCourse.includes(courseId);\n\t\t}\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className='modal-container'>\n\t\t\t\t\t<Modal\n\t\t\t\t\t\tfull\n\t\t\t\t\t\tshow={this.state.showCurriculumModal}\n\t\t\t\t\t\tonHide={this.curriculumModalToggle}\n\t\t\t\t\t\tbackdrop='static'\n\t\t\t\t\t\tstyle={{ overflow: 'visible' }}>\n\t\t\t\t\t\t<CurriculumModal {...this.props} />\n\t\t\t\t\t</Modal>\n\n\t\t\t\t\t<Modal\n\t\t\t\t\t\tfull\n\t\t\t\t\t\tshow={this.state.showAssignmentModal}\n\t\t\t\t\t\tonHide={this.assignmentModalToggle}\n\t\t\t\t\t\tbackdrop='static'\n\t\t\t\t\t\tstyle={{ overflow: 'visible' }}>\n\t\t\t\t\t\t<AssignmentModal {...this.props} courseTitle={title} />\n\t\t\t\t\t</Modal>\n\t\t\t\t</div>\n\t\t\t\t<Container style={{ flex: 1, flexDirection: 'row' }}>\n\t\t\t\t\t<Container\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tflex: 3,\n\t\t\t\t\t\t\tflexDirection: 'column'\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t<Container\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tjustifyContent: 'flex-start',\n\t\t\t\t\t\t\t\tmaxWidth: '90%'\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t<Container\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tmarginBottom: '50px',\n\t\t\t\t\t\t\t\t\tminHeight: '100px'\n\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t<h2 id='title'>{title}</h2>\n\t\t\t\t\t\t\t\t<p\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tmarginTop: '40px',\n\t\t\t\t\t\t\t\t\t\tfontSize: '20px'\n\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t{description}\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</Container>\n\n\t\t\t\t\t\t\t<Container\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tmarginBottom: '50px',\n\t\t\t\t\t\t\t\t\tminHeight: '50px'\n\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t<h4 style={{ fontWeight: 'bold' }}>Duration</h4>\n\t\t\t\t\t\t\t\t<p\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tmarginTop: '40px',\n\t\t\t\t\t\t\t\t\t\tfontSize: '20px'\n\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t{duration} Hours\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</Container>\n\n\t\t\t\t\t\t\t<Container\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tmarginBottom: '50px',\n\t\t\t\t\t\t\t\t\tminHeight: '50px'\n\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t<h4 style={{ fontWeight: 'bold' }}>Academic Qualification</h4>\n\t\t\t\t\t\t\t\t<p\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tmarginTop: '40px',\n\t\t\t\t\t\t\t\t\t\tfontSize: '20px'\n\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t{qualification[0].toUpperCase() + qualification.substr(1)}\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</Container>\n\n\t\t\t\t\t\t\t<Container\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tmarginBottom: '50px',\n\t\t\t\t\t\t\t\t\tminHeight: '50px'\n\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t<h4 style={{ fontWeight: 'bold' }}>\n\t\t\t\t\t\t\t\t\tRequirements\n\t\t\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t\t\t<p\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tmarginTop: '40px',\n\t\t\t\t\t\t\t\t\t\tfontSize: '20px'\n\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t{prerequisite}\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</Container>\n\n\t\t\t\t\t\t\t{this.state.loading ? (\n\t\t\t\t\t\t\t\t<Loader />\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<Container style={{ marginBottom: '50px' }}>\n\t\t\t\t\t\t\t\t\t\t<h4\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\tpadding: '5px',\n\t\t\t\t\t\t\t\t\t\t\t\tfontWeight: 'bold'\n\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\tCurriculum\n\t\t\t\t\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t\t\t\t\t<PanelGroup\n\t\t\t\t\t\t\t\t\t\t\tonSelect={this.panelSelect}\n\t\t\t\t\t\t\t\t\t\t\taccordion={true}\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: '#fffff0',\n\t\t\t\t\t\t\t\t\t\t\t\tminHeight: '80px'\n\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t{curriculum ? (\n\t\t\t\t\t\t\t\t\t\t\t\tcurriculum.map((item, i) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst allowPreview = !!item.allowPreview;\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Panel\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theader={item.title}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\teventKey={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem.curriculumId\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{this.renderCurriculum(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tallowPreview,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tisCourseCreator,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tenrolledToCourse,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Panel>\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t<Container>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Panel header='No curriculum found...' />\n\t\t\t\t\t\t\t\t\t\t\t\t</Container>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t{authUser && isCourseCreator ? (\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\tappearance='subtle'\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.curriculumModalToggle}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t+ Add curriculum\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t\t\t</PanelGroup>\n\t\t\t\t\t\t\t\t\t</Container>\n\t\t\t\t\t\t\t\t\t<Container>\n\t\t\t\t\t\t\t\t\t\t<h4\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\tpadding: '5px',\n\t\t\t\t\t\t\t\t\t\t\t\tfontWeight: 'bold'\n\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\tAssignments\n\t\t\t\t\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t\t\t\t\t{\t(enrolledToCourse || (authUser && authUser.roles.userRole) === 'admin')?\n\t\t\t\t\t\t\t\t\t\t\t<Panel header=\"Assignments\" bordered bodyFill>\n\t\t\t\t\t\t\t\t\t\t\t\t<Table height={400} data={assignments} style={{fontSize: '12px'}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Table.Column width={50} align=\"center\" resizable>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Table.HeaderCell>Id</Table.HeaderCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Table.Cell dataKey=\"assignmentId\"/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Table.Column>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Table.Column flexGrow={1} align=\"center\" fixed>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Table.HeaderCell>Assignment Title</Table.HeaderCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Table.Cell dataKey=\"title\"/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Table.Column>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Table.Column width={80} align=\"center\" fixed>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Table.HeaderCell>Type</Table.HeaderCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Table.Cell dataKey=\"type\"/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Table.Column>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Table.Column width={110} align=\"center\" fixed=\"right\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Table.HeaderCell>Action</Table.HeaderCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Table.Cell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{rowData => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(rowData.type === 'subjective'){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<NavLink to={`/courses/${this.props.match.params.id}/assignment/${rowData.assignmentId.substr(1)}`}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button>View</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a href={rowData.attachmentUrl}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button>View</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Table.Cell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Table.Column>\n\t\t\t\t\t\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t\t\t\t\t\t\t{authUser && isCourseCreator ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tappearance='subtle'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.assignmentModalToggle\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t+ Add assignments\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t\t\t\t</Panel>\n\t\t\t\t\t\t\t\t\t\t\t: <p style={{fontSize: '12px'}}>Enroll to view assignments...</p>\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t{/* <PanelGroup\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: '#fffff0',\n\t\t\t\t\t\t\t\t\t\t\t\tminHeight: '80px'\n\t\t\t\t\t\t\t\t\t\t\t}}>\t\n\t\t\t\t\t\t\t\t\t\t\t{assignments ? (\n\t\t\t\t\t\t\t\t\t\t\t\tassignments.map((item, i) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tlet curi = curriculum.filter(curri => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn curri.curriculumId === item.curriId.substr(1);\n\t\t\t\t\t\t\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Panel\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theader={curi[0].title}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{this.renderAssignments(item)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Panel>\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t<Container>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Panel header='No assignments found...' />\n\t\t\t\t\t\t\t\t\t\t\t\t</Container>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t{authUser && isCourseCreator ? (\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\tappearance='subtle'\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.assignmentModalToggle\n\t\t\t\t\t\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t+ Add assignments\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t\t\t</PanelGroup> */}\n\t\t\t\t\t\t\t\t\t</Container>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Container>\n\t\t\t\t\t</Container>\n\n\t\t\t\t\t<Container\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tflex: 1,\n\t\t\t\t\t\t\talignItems: 'right',\n\t\t\t\t\t\t\tmaxWidth: '222px'\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t<div style={{ width: '220px', height: '200px' }}>\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tsrc={image}\n\t\t\t\t\t\t\t\twidth='100%'\n\t\t\t\t\t\t\t\theight='100%'\n\t\t\t\t\t\t\t\talt=''\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Container style={{ flexDirection: 'column' }}>\n\t\t\t\t\t\t\t<Container\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\ttextTransform: 'capitalize',\n\t\t\t\t\t\t\t\t\tflexDirection: 'row',\n\t\t\t\t\t\t\t\t\tpadding: '10px',\n\t\t\t\t\t\t\t\t\tmaxHeight: '50px'\n\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\t\t\tstyle={{ fontSize: '1em' }}\n\t\t\t\t\t\t\t\t\ticon='universal-access'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<p style={{ paddingLeft: '10px', fontSize: '15px' }}>\n\t\t\t\t\t\t\t\t\t{levelOfStudy}\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</Container>\n\t\t\t\t\t\t\t<Container>\n\t\t\t\t\t\t\t\t{this.renderEnrollButton(\n\t\t\t\t\t\t\t\t\tisCourseCreator,\n\t\t\t\t\t\t\t\t\tauthUser,\n\t\t\t\t\t\t\t\t\tenrolledToCourse,\n\t\t\t\t\t\t\t\t\tcourseId\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Container>\n\t\t\t\t\t\t</Container>\n\t\t\t\t\t</Container>\n\t\t\t\t</Container>\n\t\t\t</div>\n\t\t);\n\t}\n}","import React from 'react';\nimport AnnouncementsPanel from '../../Announcements/AnnouncementsPanel';\nimport mainTemplate from '../../Templates/MainTemplate';\nimport { Breadcrumb } from 'rsuite';\nimport Body from './Body';\nimport withCourse from '../Context/withCourse';\nimport { NavLink } from 'react-router-dom';\n\nconst Header = (props) => (\n    <div>\n        <div style ={{position: 'absolute', right: 18, top: 10}}>\n            <AnnouncementsPanel {...props}/>\n        </div>\n    </div>\n)\n\nconst BreadCrumb = (props) => (\n    <Breadcrumb style={{fontSize: '12px'}}>\n        <NavLink to=\"/dashboard\">Dashboard</NavLink>\n        <Breadcrumb.Item active>Courses</Breadcrumb.Item>\n    </Breadcrumb>\n)\n\nconst body = (props) => {\n    return(\n        <div>\n            <div>\n                <Body {...props}/>\n            </div>\n        </div>\n    )\n}\n\n\n\nconst WrappedComponents = mainTemplate(Header, BreadCrumb, body);\n\nexport default withCourse(WrappedComponents);\n","import React from 'react';\nimport { withFirebase } from '../../../Firebase';\nimport { Alert } from 'rsuite';\n\nconst withCurriculum = Component => {\n    class WithCurriculum extends React.Component{\n        constructor(props){\n            super(props);\n\n            this.state = {\n                content: null,\n            }\n            this.getCurriculum = this.getCurriculum.bind(this);\n            this.updateCurriculum = this.updateCurriculum.bind(this);\n\n        }\n\n        getCurriculum(courseId, curriId){\n            this.props.firebase.courseCurriculums(courseId).child(curriId).child('curriculumContent').once('value').then(snapshot => {\n                this.setState({content: snapshot.val()});\n            })\n        }\n\n        updateCurriculum(courseId, curriId, content){\n            this.props.firebase.courseCurriculums(courseId).child(curriId).update({curriculumContent: content}).then(()=>{\n                Alert.success('Successfully saved');\n            }).catch(err => {Alert.error('Save failed... Please try again.')})\n        }\n\n        render(){\n            return(\n                <Component {...this.props} \n                    getCurriculum={this.getCurriculum} \n                    content={this.state.content}\n                    updateCurriculum={this.updateCurriculum}\n                />\n            )\n        }\n    }\n\n    return withFirebase(WithCurriculum);\n}\n\nexport default withCurriculum;","import React from 'react';\nimport SunEditor from 'suneditor-react';\nimport { compose } from 'recompose';\n\nimport 'suneditor/dist/css/suneditor.min.css';\n\nimport { Container, Nav, Navbar, Icon } from 'rsuite';\nimport withCurriculum from './withCurriculum';\nimport { AuthUserContext } from '../../../Session';\n\nclass CurriculumPage extends React.Component{\n    constructor(props){\n        super(props);\n\n        this.state = {\n            contentState: '',\n            sunEditor: {\n                editing: false,\n                resizingBar: false,\n                enable: false,\n                showToolbar: false,\n                disable: true,\n            }\n        }\n\n        this.editorOnChange = this.editorOnChange.bind(this);\n        this.editorSave = this.editorSave.bind(this);\n        this.editToggle = this.editToggle.bind(this);\n    }\n\n    componentDidMount(){\n        const curriId = this.props.match.params.id;\n        const courseId = this.props.match.url.replace(/\\/.*?\\//g, '').replace(curriId, '');\n        this.props.getCurriculum(courseId, curriId);\n        \n        this.props.firebase.courseCurriculums(`-${courseId}`)\n            .child(`-${curriId}`)\n            .child('curriculumContent')\n            .on('value', snapshot=> {\n                this.setState({contentState: snapshot.val()})\n            }\n        )\n    }\n\n    editToggle(){\n        this.setState({\n            sunEditor:{\n                editing: !this.state.sunEditor.editing,\n                resizingBar: !this.state.sunEditor.resizingBar,\n                enable: !this.state.sunEditor.enable,\n                showToolbar: !this.state.sunEditor.showToolbar,\n                disable: !this.state.sunEditor.disable,\n            }\n        })\n    }\n\n    editorOnChange(content){\n        this.setState({contentState: content});\n    }\n    \n    editorSave(){\n        const curriId = this.props.match.params.id;\n        const courseId = this.props.match.url.replace(/\\/.*?\\//g, '').replace(curriId, '');\n        this.props.updateCurriculum('-'+courseId, '-'+curriId, this.state.contentState);\n    }\n\n    render(){\n        return(\n            <AuthUserContext.Consumer>\n                {authUser => {\n                    const hasEditAuthority = authUser && authUser.roles.userRole === 'admin';\n\t\t\t\t\tlet coursesCreated = null;\n\t\t\t\t\tlet isCourseCreator = null;\n\n\t\t\t\t\tif(hasEditAuthority){\n\t\t\t\t\t\tcoursesCreated = Object.keys(authUser.coursesCreated).map(\n\t\t\t\t\t\t\tkey => ({\n\t\t\t\t\t\t\t\t...authUser.coursesCreated[key],\n\t\t\t\t\t\t\t\tuid: key\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t);\n\t\t\t\t\t\tcoursesCreated = coursesCreated.map(item => {\n\t\t\t\t\t\t\treturn item.courseId;\n                        });\n                        \n                        const curriId = this.props.match.params.id;\n                        const courseId = this.props.match.url.replace(/\\/.*?\\//g, '').replace(curriId, '');\n\n\t\t\t\t\t\tisCourseCreator = coursesCreated.includes(\n\t\t\t\t\t\t\tcourseId\n                        );\n                    }\n                    \n                    return(\n                        <Container>\n                            <Navbar appearance='inverse'>\n                                    <Nav pullLeft onSelect={()=>{this.props.history.goBack()}}>\n                                        <Nav.Item icon={<Icon size=\"2x\" icon=\"chevron-left\" />} />\n                                    </Nav>\n                                {\n                                    isCourseCreator?\n                                        (this.state.sunEditor.editing? \n                                            <div>\n                                                <Nav pullRight onSelect={this.editorSave}>\n                                                    <Nav.Item icon={<Icon icon=\"save\" />} >Save</Nav.Item>\n                                                </Nav>\n                                                <Nav pullRight onSelect={this.editToggle}>\n                                                    <Nav.Item icon={<Icon icon=\"close\" />} >Close</Nav.Item>\n                                                </Nav>\n                                            </div>\n                                        :\n                                            <div>\n                                                <Nav pullRight onSelect={this.editToggle}>\n                                                    <Nav.Item icon={<Icon icon=\"edit\" />} >Edit</Nav.Item>\n                                                </Nav>\n                                            </div>\n                                        )\n                                    :\n                                        (\n                                            ''\n                                        )\n                                    \n                                }\n                                \n                            </Navbar>\n                            <Container style={{flex: 1}}>\n                                <Container id='curriculumEditor' style={{flex: 1, alignItems: 'center'}}>\n                                    <SunEditor \n                                        placeholder=\"Please type here...\"\n                                        resizingBar= {this.state.sunEditor.resizingBar}\n                                        enable= {this.state.sunEditor.enable}\n                                        showToolbar= {this.state.sunEditor.showToolbar}\n                                        disable= {this.state.sunEditor.disable}\n                                        setOptions={{\n                                            height: 'auto',\n                                            resizingBar: false,     \n                                            buttonList: [[\n                                                'formatBlock', \n                                                'font',\n                                                'fontSize'],[\n                                                'paragraphStyle',\n                                                'align', \n                                                'list', \n                                                'lineHeight', \n                                                'fontColor', \n                                                'hiliteColor', \n                                                'horizontalRule', \n                                                'table'], \n                                                ['bold', 'underline', 'italic', 'strike', 'subscript', 'superscript'],\n                                                ['fullScreen'],\n                                                ['removeFormat'],\n                                                ['outdent', 'indent'],\n                                                ['image', 'link', 'video'],\n                                            ],\n                                        }}\n                                        setContents= {this.state.contentState? this.state.contentState: 'No curriculum content found...'}\n                                        onChange= {this.editorOnChange}\n                                    />\n                                </Container>                \n                            </Container>\n                        </Container>\n                    )\n                }}\n            \n            \n            </AuthUserContext.Consumer>\n        )\n    }\n}\n\n// const condition = authUser => !!authUser;\n\nexport default compose(\n    withCurriculum,\n)(CurriculumPage); \n","import React from 'react';\nimport {compose} from 'recompose';\nimport mainTemplate from '../../Templates/MainTemplate'\nimport {withFirebase} from '../../Firebase';\nimport {withAuthorization} from '../../Session'\nimport withCourse from '../../Courses/Context/withCourse'\nimport {NavLink} from 'react-router-dom';\nimport AnnouncementsPanel from '../../Announcements/AnnouncementsPanel';\nimport { Breadcrumb } from 'rsuite';\nimport Body from './Body';\n\nconst Header = (props) => (\n    <div>\n        <div style ={{position: 'absolute', right: 18, top: 10}}>\n            <AnnouncementsPanel {...props}/>\n        </div>\n    </div>\n)\n\nconst BreadCrumb = () => (\n    <Breadcrumb style={{fontSize: '12px'}}>\n        <NavLink to=\"/dashboard\">Dashboard</NavLink>\n        <NavLink to=\"/courses\">Courses</NavLink>\n        <Breadcrumb.Item active>Add New Announcement</Breadcrumb.Item>\n    </Breadcrumb>\n)\n\nconst condition = authUser => authUser && !!(authUser.roles.userRole === 'admin');\n\nlet AddAnnouncement = mainTemplate(Header, BreadCrumb, Body);\n\nexport default compose(\n    withAuthorization(condition),\n    withCourse,\n    withFirebase,\n)(AddAnnouncement);\n\n","import React from 'react';\nimport {\n\tContainer,\n\tFormGroup,\n\tForm,\n\tFormControl,\n\tControlLabel,\n\tSelectPicker,\n\tButton,\n\tButtonToolbar,\n\tAlert,\n} from \"rsuite\";\n\nclass Body extends React.Component{\n    constructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tshowError: false,\n\t\t\terrorPlacement: \"bottomStart\",\n\t\t\tformValue: {\n                courseId: '',\n                announcement: '',\n\t\t\t},\n            userCreatedCourses: null,\n            \n\t\t};\n        this.formSubmit = this.formSubmit.bind(this);\n        this.getCreatedCourses = this.getCreatedCourses.bind(this);\n\t}\n\n\tformSubmit() {\n\t\tconst { courseId, announcement } = this.state.formValue;\n\n\t\tif (!courseId ||!announcement) {\n\t\t\tAlert.error(\"Please fill in all fields.\", 5000);\n\t\t} else {\n            this.props.firebase.course(courseId).child('announcements').push(\n                {\n                    createdOn: Date.now(),\n                    createdBy: this.props.authUser.name,\n                    content: announcement,\n                },\n                err => {\n                    if (err) {\n                        Alert.error(\n                            \"An error occurred while creating announcement. Please try again.\",\n                            5000\n                        );\n                    }\n                }\n            ).then(rsp => {\n                Alert.success('Announcement created successfully.');\n                this.props.history.push(`/dashboard`);\n            })\n\t\t}\n\t}\n\n    getCreatedCourses(){\n        let userCreatedCourses = this.props.coursesList;\n        const uid = this.props.authUser.uid;\n        \n        userCreatedCourses = userCreatedCourses.filter(course=> {\n            return course.createdBy === uid\n        })\n\n        userCreatedCourses = userCreatedCourses.map(course=> {\n            return{ \n                label: course.title, \n                value: course.uid,\n            };\n        })\n\n        this.setState({userCreatedCourses});\n    }\n\n    componentDidMount(){\n        this.getCreatedCourses();\n    }\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Container style={{ flex: 1, flexDirection: \"column\" }}>\n\t\t\t\t\t<Container>\n\n\t\t\t\t\t\t<Form fluid onChange={formValue => this.setState({ formValue })}>\n                            <FormGroup>\n                                <ControlLabel>Add announcement to course:</ControlLabel>\n                                <FormControl\n                                    name=\"courseId\"\n                                    accepter={SelectPicker}\n                                    placeholder=\"--Select--\"\n                                    data={this.state.userCreatedCourses? this.state.userCreatedCourses: {\n                                        label: 'null',\n                                        value: 'null'\n                                    }}\n                                />\n                            </FormGroup>\n\n\t\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t\t<ControlLabel>Announcement Content</ControlLabel>\n\t\t\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\t\t\trows={5}\n\t\t\t\t\t\t\t\t\tname=\"announcement\"\n\t\t\t\t\t\t\t\t\tcomponentClass=\"textarea\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</FormGroup>\n\n                            <FormGroup>\n                                <ButtonToolbar style={{ textAlign: \"center\" }}>\n                                    <Button\n                                        appearance=\"ghost\"\n                                        onClick={this.formSubmit}\n                                        style={{ width: \"100px\" }}\n                                    >\n                                        Create\n                                    </Button>\n                                </ButtonToolbar>\n                            </FormGroup>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t</Container>\n\t\t\t\t</Container>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Body;","import React from 'react';\nimport { Container } from 'rsuite';\nimport CourseShowcase from '../CourseShowcase';\n\nexport default class Body extends React.Component{\n\n    render(){\n        const coursesList = this.props.coursesList;\n\n        return(\n            <Container style={{flex: 1, flexDirection: 'row', flexWrap: 'wrap', marginLeft: '20px'}}>\n            {\n                coursesList && coursesList.length?\n                    Array.from(coursesList).reverse().map(course => {\n                        return (\n                            <CourseShowcase course={course}/>\n                        )\n                    })\t\n                : <p>No courses found...</p>\n            }\n        </Container>\n        )\n    }\n}","import React from 'react';\nimport AnnouncementsPanel from '../../Announcements/AnnouncementsPanel';\nimport mainTemplate from '../../Templates/MainTemplate';\nimport { Breadcrumb } from 'rsuite';\nimport Body from './Body';\nimport withCourse from '../Context/withCourse';\nimport { NavLink } from 'react-router-dom';\n\nconst Header = (props) => (\n    <div>\n        <div style ={{position: 'absolute', right: 18, top: 10}}>\n            <AnnouncementsPanel {...props}/>\n        </div>\n    </div>\n)\n\nconst BreadCrumb = (props) => (\n    <Breadcrumb style={{fontSize: '12px'}}>\n        <NavLink to=\"/dashboard\">Dashboard</NavLink>\n        <Breadcrumb.Item active>All Courses</Breadcrumb.Item>\n    </Breadcrumb>\n)\n\nconst body = (props) => {\n    return(\n        <div>\n            <div>\n                <Body {...props}/>\n            </div>\n        </div>\n    )\n}\n\n\n\nconst WrappedComponents = mainTemplate(Header, BreadCrumb, body);\n\nexport default withCourse(WrappedComponents);\n","import React from 'react';\nimport { withFirebase } from '../../../Firebase';\nimport { Alert } from 'rsuite';\n\nconst withAssignment = Component => {\n    class WithAssignment extends React.Component{\n        updateAssignment = (courseId, assignmentId, questions) => {\n            questions = questions? questions: [];\n            this.props.firebase.assignments(courseId).child(assignmentId).update({questions}).then(()=>{\n                Alert.success('Successfully saved');\n            }).catch(err => {Alert.error('Save failed... Please try again.')})\n        }\n\n        render(){\n            return(\n                <Component {...this.props} \n                    getAssignments={this.getAssignments} \n                    updateAssignment={this.updateAssignment}\n                />\n            )\n        }\n    }\n\n    return withFirebase(WithAssignment);\n}\n\nexport default withAssignment;","import React from \"react\";\nimport SunEditor from \"suneditor-react\";\nimport { compose } from \"recompose\";\n\nimport \"suneditor/dist/css/suneditor.min.css\";\n\nimport {\n    Container,\n    Nav,\n    Navbar,\n    Icon,\n    Button,\n    Alert,\n    Form,\n    ControlLabel,\n    FormGroup,\n    FormControl,\n    ButtonGroup,\n    Modal,\n} from \"rsuite\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport { withAuthentication } from \"../../../Session\";\nimport withAssignment from \"./withAssignment\";\n\nclass AssignmentPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            contentState: \"\",\n            assignmentsQ: [],\n            show: false,\n        };\n    }\n    \n    componentDidMount() {\n        const assignmentId = this.props.match.params.id;\n        const courseId = this.props.match.url\n            .replace(/\\/.*?\\//g, \"\")\n            .replace(assignmentId, \"\");\n\n        this.props.firebase\n            .assignments(`-${courseId}`)\n            .child(`-${assignmentId}`)\n            .child(\"questions\")\n            .on(\"value\", (snapshot) => {\n                this.setState({\n                    assignmentsQ: snapshot.val() ? snapshot.val() : [],\n                });\n            });\n    }\n\n    studentHasAttempted = (assignmentId) => {\n        const uid = this.props.authUser? this.props.firebase.auth.currentUser.uid: null;\n        let submissions = [];\n        if(uid){\n            this.props.firebase.user(uid).child('enrolledCourses').on('value', snapshot => {\n                snapshot.forEach(child => {\n                    const submission = child.val().submissions;\n                    if(submission){\n                        submissions.push(submission)\n                    }\n                })\n            })\n        }\n\n        if(submissions.length){\n            submissions = submissions.map(item => {\n                const keys = Object.keys(item);\n                // return item[key].assId;\n                return keys.map(key => {\n                    return item[key].assId;\n                })\n            })\n\n            submissions = submissions.flat();\n        }\n\n        return submissions.includes(assignmentId)? true : false;\n    }\n\n    editorOnChange = (contentState) => {\n        this.setState({ contentState });\n    };\n\n    saveQuestions = () => {\n        const assignmentId = this.props.match.params.id;\n        const courseId = this.props.match.url\n            .replace(/\\/.*?\\//g, \"\")\n            .replace(assignmentId, \"\");\n        this.props.updateAssignment(\n            \"-\" + courseId,\n            \"-\" + assignmentId,\n            this.state.assignmentsQ\n        );\n        this.closeModal();\n    };\n\n    addQuestion = () => {\n        if (this.state.contentState) {\n            let assignmentsQ = this.state.assignmentsQ\n                ? this.state.assignmentsQ\n                : [];\n            assignmentsQ.push(this.state.contentState);\n            this.setState({ assignmentsQ });\n        } else {\n            Alert.error(\"Content cannot be blank.\");\n        }\n\n        this.setState({ contentState: \"\" });\n    };\n\n    removeQ = (i) => {\n        let assignmentsQ = this.state.assignmentsQ;\n        assignmentsQ = assignmentsQ.filter((ass, index) => {\n            return index !== i;\n        });\n\n        this.setState({ assignmentsQ });\n    };\n\n    renderQuestions = (stud = false) => {\n        const assignmentsQ = this.state.assignmentsQ;\n        const assignmentId = this.props.match.params.id;\n        \n        const attempted = (this.studentHasAttempted(assignmentId));\n        const disabledAdmin = this.props.authUser? (this.props.authUser.roles.userRole === 'admin'? true : null) : false;\n\n        return (\n            <Container style={{ minHeight: \"120px\" }}>\n                <div style={{ marginBottom: \"30px\" }}>\n                    <h1>Assignment</h1>\n                </div>\n\n                <Form\n                    onChange={(formValue) => {\n                        this.setState({formValue})\n                    }}\n                    style={{ marginBottom: \"20px\" }}\n                >\n                    {assignmentsQ.map((question, i) => {\n                        return (\n                            <>\n                                <FormGroup key={i}>\n                                    <ControlLabel>\n                                        Question {i + 1}\n                                    </ControlLabel>\n                                    {ReactHtmlParser(question)}\n                                    <FormControl name={`q${i + 1}`} disabled={attempted? true: false}/>\n                                    {!stud ? (\n                                        <Button\n                                            color=\"red\"\n                                            onClick={() => this.removeQ(i)}\n                                        >\n                                            Remove\n                                        </Button>\n                                    ) : null}\n                                </FormGroup>\n                            </>\n                        );\n                    })}\n                    {\n                        stud? \n                        <FormGroup>\n                            {attempted?\n                            <Button\n                                id='submitted'\n                                appearance=\"ghost\"\n                                color=\"red\"\n                                onClick={this.studentSubmitAnswer}\n                                style={{ width: \"100%\" }}\n                                disabled= {attempted? true : false}\n                            >\n                                Submitted\n                            </Button>  \n                            :<Button\n                                id=\"submit\"\n                                appearance=\"ghost\"\n                                onClick={this.studentSubmitAnswer}\n                                style={{ width: \"100%\" }}\n                                disabled= {attempted || disabledAdmin? true : false}\n                            >\n                                {disabledAdmin ? <p>Admin Viewable Only</p> : <p>Finish and Submit</p>}\n                            </Button>  \n                            }\n                            \n                        </FormGroup>   \n                        :null \n                    }\n                </Form>\n            </Container>\n        );\n    };\n\n    closeModal = () => {\n        this.setState({ show: false });\n    };\n\n    openModal = () => {\n        this.setState({ show: true });\n    };\n\n    studentSubmitAnswer = () => {\n        const uid = this.props.firebase.auth.currentUser.uid;\n        const assId = this.props.match.params.id;\n        const courseId = this.props.match.url.replace(/\\/.*?\\//g, '').replace(assId, '');\n\n        const formValue = this.state.formValue;\n        if(formValue){\n            const authUser = this.props.authUser;\n            \n            let enrolledCourses = authUser.enrolledCourses;\n            const enrolledCoursesKey = Object.keys(authUser.enrolledCourses);\n\n            enrolledCourses = enrolledCoursesKey.map(key => {\n                return {\n                    snapshotKey: key,\n                    courseId: enrolledCourses[key].courseId\n                }\n            })\n            \n            enrolledCourses = enrolledCourses.filter(item =>{\n                return item.courseId === courseId;\n            })\n            \n            const dateNow = Date.now();\n\n            this.props.firebase.user(uid).child('enrolledCourses').child(enrolledCourses[0].snapshotKey).child('submissions').push({\n                status: 'new',\n                assId,\n                answers: formValue,\n                submittedOn: dateNow,\n            }).then(rsp => {\n                Alert.success('Successfully submitted');\n\n                this.props.firebase.course(`-${courseId}`).child('submissions').push({\n                    status: 'new',\n                    studentId: uid,\n                    studentName: authUser.name,\n                    submittedOn: dateNow,\n                    snapshotKey: rsp.key,\n                })\n            })\n        }\n        else{\n            Alert.error('Please answer all questions.');\n        }\n    }\n\n    renderForAdmin = () => {\n        return (\n            <>\n                <Navbar appearance=\"inverse\">\n                    <Nav\n                        pullLeft\n                        onSelect={() => {\n                            this.props.history.goBack();\n                        }}\n                    >\n                        <Nav.Item\n                            icon={<Icon size=\"2x\" icon=\"chevron-left\" />}\n                        />\n                    </Nav>\n                </Navbar>\n\n                <Container\n                    style={{\n                        marginTop: \"20px\",\n                        flexWrap: \"wrap\",\n                        margin: \"20px\",\n                    }}\n                >\n                    {this.renderQuestions()}\n\n                    <SunEditor\n                        placeholder=\"Please type here...\"\n                        setOptions={{\n                            height: \"auto\",\n                            resizingBar: false,\n                            buttonList: [\n                                [\"bold\", \"underline\", \"italic\"],\n                                [\"list\", \"fontColor\", \"hiliteColor\"],\n                                [\"image\"],\n                            ],\n                        }}\n                        onChange={this.editorOnChange}\n                    />\n\n                    <ButtonGroup style={{ textAlign: \"center\" }}>\n                        <Button\n                            appearance=\"primary\"\n                            style={{ marginTop: \"20px\", width: \"50%\" }}\n                            onClick={this.openModal}\n                        >\n                            Save All\n                        </Button>\n                        <Button\n                            appearance=\"primary\"\n                            style={{ marginTop: \"20px\", width: \"50%\" }}\n                            onClick={this.addQuestion}\n                            disabled={this.state.contentState ? false : true}\n                        >\n                            Add\n                        </Button>\n                        <Modal\n                            backdrop=\"static\"\n                            show={this.state.show}\n                            onHide={this.close}\n                            size=\"xs\"\n                        >\n                            <Modal.Body>\n                                <Icon\n                                    icon=\"remind\"\n                                    style={{\n                                        color: \"#ffb300\",\n                                        fontSize: 24,\n                                    }}\n                                />{\" \"}\n                                Confirm saving/overwriting changes?\n                            </Modal.Body>\n                            <Modal.Footer>\n                                <Button\n                                    onClick={this.saveQuestions}\n                                    appearance=\"primary\"\n                                >\n                                    Ok\n                                </Button>\n                                <Button\n                                    onClick={this.closeModal}\n                                    appearance=\"subtle\"\n                                >\n                                    Cancel\n                                </Button>\n                            </Modal.Footer>\n                        </Modal>\n                    </ButtonGroup>\n                </Container>\n            </>\n        );\n    };\n\n    renderForStudent = () => {\n        return (\n            <>\n                <Navbar appearance=\"inverse\">\n                    <Nav\n                        pullLeft\n                        onSelect={() => {\n                            this.props.history.goBack();\n                        }}\n                    >\n                        <Nav.Item\n                            icon={<Icon size=\"2x\" icon=\"chevron-left\" />}\n                        />\n                    </Nav>\n                </Navbar>\n\n                <Container\n                    style={{\n                        marginTop: \"20px\",\n                        flexWrap: \"wrap\",\n                        margin: \"20px\",\n                        alignItems: \"center\",\n                    }}\n                >\n                    {this.renderQuestions(true)}\n                </Container>\n            </>\n        );\n    };\n\n    render() {\n        const authUser          = this.props.authUser;\n        const hasEditAuthority  = authUser && authUser.roles.userRole === \"admin\";\n        let coursesCreated      = null;\n        let isCourseCreator     = null;\n\n        if (hasEditAuthority) {\n            const coursesCreatedKey = authUser.coursesCreated? Object.keys(authUser.coursesCreated) : null;\n\n            if(coursesCreatedKey){\n                coursesCreated = Object.keys(\n                    authUser.coursesCreated\n                ).map((key) => ({\n                    ...authUser.coursesCreated[key],\n                    uid: key,\n                }));\n                coursesCreated = coursesCreated.map((item) => {\n                    return item.courseId;\n                });\n    \n                const curriId = this.props.match.params.id;\n                const courseId = this.props.match.url\n                    .replace(/\\/.*?\\//g, \"\")\n                    .replace(curriId, \"\");\n    \n                isCourseCreator = coursesCreated.includes(courseId);\n            }\n        }\n\n        return (\n            <Container style={{ flex: 1, flexDirection: \"column\" }}>\n                {isCourseCreator\n                    ? this.renderForAdmin()\n                    : this.renderForStudent()}\n            </Container>\n        );\n    }\n}\n\nexport default compose(\n    withAuthentication,\n    withAssignment)\n(AssignmentPage);\n","import React from 'react';\nimport {\n    Container,\n    Panel,\n    Table,\n    Button,\n    Modal,\n    Form,\n    FormGroup,\n    ControlLabel,\n    FormControl,\n    InputNumber,\n    Divider,\n    Alert\n} from 'rsuite';\nimport ReactHtmlParser from 'react-html-parser';\n\nexport default class Body extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            show: false,\n            modalData: {},\n            formValue: {}\n        };\n    }\n\n    reviewAssignment = rowData => {\n        this.props.firebase\n            .user(rowData.studentId)\n            .child('enrolledCourses')\n            .on('value', snapshot => {\n                let match = [];\n                let submissions = [];\n                let coursesList = this.props.coursesList;\n\n                snapshot.forEach(item => {\n                    let course = item.val();\n                    course.enrolledCourseKey = item.key;\n\n                    if (course.submissions) {\n                        submissions.push(course);\n                    }\n                });\n\n                //Get courseId and submissions of the course\n                submissions = submissions\n                    .map(item => {\n                        const innerKeys = Object.keys(item.submissions);\n\n                        const s = innerKeys.map(submissionKey => {\n                            return {\n                                submissionKey,\n                                data: item.submissions[submissionKey]\n                            };\n                        });\n\n                        return {\n                            courseId: item.courseId,\n                            enrolledCourseKey: item.enrolledCourseKey,\n                            submissions: s\n                        };\n                    })\n                    .flat();\n\n                //Get matching course with matching rowData.snapshotKey\n                match = submissions.filter(item => {\n                    const temp = Object.keys(item.submissions).map(key => {\n                        return item.submissions[key].submissionKey;\n                    });\n\n                    return temp.includes(rowData.snapshotKey);\n                });\n\n                //Get only the submission that match the rowData.snapshotKey\n                match = match.map(item => {\n                    item.submissions = item.submissions.filter(inner => {\n                        return inner.submissionKey === rowData.snapshotKey;\n                    });\n\n                    item.submissions = item.submissions[0];\n                    return item;\n                });\n\n                let assId = match.map(item => {\n                    return `-${item.submissions.data.assId}`;\n                })[0];\n\n                //Extracting assignments to obtain original questions\n                let assignments = coursesList.map(item => {\n                    return item.assignments;\n                });\n\n                assignments = assignments.filter((course, i) => {\n                    if(course){\n                        const keys = Object.keys(course);\n                        return keys.includes(assId);\n                    }else {\n                        return null;\n                    }\n                });\n                \n                assignments = assignments[0][assId].questions;\n\n                this.setState({\n                    show: true,\n                    modalData: {\n                        questions: assignments,\n                        submissionData: match[0],\n                        rowData\n                    }\n                });\n            });\n    };\n\n    close = () => {\n        this.setState({ show: false });\n    };\n\n    onReviewSubmit = modalData => {\n        let { marks, comments } = this.state.formValue;\n        const uid = this.props.firebase.auth.currentUser.uid;\n        let { rowData, submissionData } = modalData;\n        marks = marks ? marks : rowData.marks ? rowData.marks : null;\n\n        if (!marks) {\n            Alert.error('Marks cannot be empty.');\n        } else {\n            const date = Date.now();\n\n            comments = comments\n                ? comments\n                : rowData.comments\n                ? rowData.comments\n                : null;\n            this.props.firebase\n                .course(`-${submissionData.courseId}`)\n                .child('submissions')\n                .child(rowData.key)\n                .update({\n                    status: 'reviewed',\n                    comments,\n                    reviewedOn: date,\n                    reviewedBy: uid,\n                    marks: marks\n                })\n                .then(() => {\n                    this.props.firebase\n                        .user(rowData.studentId)\n                        .child('enrolledCourses')\n                        .child(submissionData.enrolledCourseKey)\n                        .child('submissions')\n                        .child(submissionData.submissions.submissionKey)\n                        .update({\n                            status: 'reviewed',\n                            reviewedOn: date,\n                            reviewer: this.props.authUser.name,\n                            reviewerId: uid,\n                            comments,\n                            marks\n                        })\n                        .then(() => {\n                            Alert.success('Successfully reviewed.');\n                            this.setState({ show: false });\n                        });\n                });\n        }\n    };\n\n    renderModal = modalData => {\n        let { submissionData, questions, rowData } = modalData;\n        let answer = submissionData.submissions.data.answers;\n\n        answer = Object.keys(answer).map(key => {\n            return answer[key];\n        });\n\n        let qna = [];\n\n        for (let i = 0; i < questions.length; i++) {\n            qna.push({\n                question: questions[i],\n                answer: answer[i]\n            });\n        }\n\n        return (\n            <Modal overflow={true} show={this.state.show} onHide={this.close}>\n                <Modal.Header>\n                    <Modal.Title>Assignment Review</Modal.Title>\n                </Modal.Header>\n                <Divider>Student Submission</Divider>\n                <Modal.Body>\n                    <Form\n                        style={{ marginBottom: '20px' }}\n                        onChange={formValue => {\n                            this.setState({ formValue });\n                        }}\n                        formDefaultValue={{\n                            comments: rowData.comments\n                                ? rowData.comments\n                                : null,\n                            marks: rowData.marks ? rowData.marks : null\n                        }}>\n                        {qna.map((item, i) => {\n                            return (\n                                <div key={i}>\n                                    <FormGroup style={{ marginBottom: '10px' }}>\n                                        <ControlLabel>Q{i + 1}</ControlLabel>\n                                        {ReactHtmlParser(item.question)}\n                                        <FormControl\n                                            style={{\n                                                width: '200',\n                                                resize: 'auto'\n                                            }}\n                                            rows={3}\n                                            componentClass='textarea'\n                                            name='answer'\n                                            readOnly\n                                            plainText\n                                            value={item.answer}\n                                        />\n                                    </FormGroup>\n                                </div>\n                            );\n                        })}\n                        <Divider>Marks allocation and Comments</Divider>\n                        <FormGroup>\n                            <ControlLabel>\n                                <span style={{ fontWeight: 'bold' }}>\n                                    Instructor comment (Optional):\n                                </span>\n                            </ControlLabel>\n                            <FormControl\n                                style={{ width: '200', resize: 'auto' }}\n                                rows={5}\n                                componentClass='textarea'\n                                name='comments'\n                            />\n                        </FormGroup>\n\n                        <FormGroup>\n                            <ControlLabel>\n                                <span style={{ fontWeight: 'bold' }}>\n                                    Marks{' '}\n                                    {rowData.marks ? (\n                                        <span style={{ color: 'red' }}>\n                                            {rowData.marks}\n                                        </span>\n                                    ) : null}\n                                    / 100% :\n                                </span>\n                            </ControlLabel>\n                            <FormControl name='marks' accepter={InputNumber} />\n                        </FormGroup>\n\n                        <FormGroup>\n                            {rowData.marks ? (\n                                <Button\n                                    onClick={() =>\n                                        this.onReviewSubmit(modalData)\n                                    }\n                                    style={{ width: '100%' }}\n                                    color='red'>\n                                    Update\n                                </Button>\n                            ) : (\n                                <Button\n                                    id='submitBtn'\n                                    onClick={() =>\n                                        this.onReviewSubmit(modalData)\n                                    }\n                                    style={{ width: '100%' }}\n                                    color='blue'>\n                                    Submit\n                                </Button>\n                            )}\n                        </FormGroup>\n                    </Form>\n                </Modal.Body>\n            </Modal>\n        );\n    };\n\n    render() {\n        const modalData =\n            this.state.modalData &&\n            this.state.modalData.questions &&\n            this.state.modalData.submissionData\n                ? this.state.modalData\n                : null;\n        let coursesList = this.props.coursesList;\n        let uid = this.props.authUser ? this.props.authUser.uid : null;\n        let submissions = [];\n        let coursesCreated =\n            this.props.authUser && this.props.authUser.coursesCreated\n                ? this.props.authUser.coursesCreated\n                : null;\n\n        if (coursesCreated) {\n            coursesCreated = Object.keys(coursesCreated).map(key => {\n                return coursesCreated[key].courseId;\n            });\n\n            coursesList = coursesList.filter(item => {\n                return item.createdBy === uid;\n            });\n\n            submissions = coursesList.map(course => {\n                return {\n                    title: course.title,\n                    submissions: course.submissions\n                };\n            });\n\n            submissions = submissions.map(item => {\n                if (item.submissions) {\n                    item.submissions = Object.keys(item.submissions).map(\n                        key => {\n                            item.submissions[key].key = key;\n                            return item.submissions[key];\n                        }\n                    );\n                }\n\n                return item;\n            });\n            if (submissions.submissions) {\n                submissions.submissions.reverse();\n            }\n        }\n\n        return (\n            <Container\n                style={{ flex: 1, marginLeft: '20px', fontSize: '13px' }}>\n                {modalData ? this.renderModal(modalData) : null}\n\n                {submissions.map(item => {\n                    return (\n                        <>\n                            <h4>{item.title}</h4>\n                            <Panel bordered>\n                                <Table data={item.submissions}>\n                                    <Table.Column width={160} resizable>\n                                        <Table.HeaderCell>\n                                            Submitted On\n                                        </Table.HeaderCell>\n                                        <Table.Cell resizable>\n                                            {rowData => {\n                                                const date = new Date(\n                                                    rowData.submittedOn\n                                                ).toLocaleString();\n\n                                                return <p>{date}</p>;\n                                            }}\n                                        </Table.Cell>\n                                    </Table.Column>\n\n                                    <Table.Column\n                                        align='center'\n                                        width={200}\n                                        resizable>\n                                        <Table.HeaderCell>\n                                            Reviewed On\n                                        </Table.HeaderCell>\n                                        <Table.Cell resizable>\n                                            {rowData => {\n                                                const reviewedOn = rowData\n                                                    .reviewedOn\n                                                    ? new Date(\n                                                          rowData.reviewedOn\n                                                      ).toLocaleString()\n                                                    : null;\n\n                                                return rowData\n                                                    .reviewedOn ? (\n                                                    <p>{reviewedOn}</p>\n                                                ) : (\n                                                    <p\n                                                        style={{\n                                                            color: 'green'\n                                                        }}>\n                                                        -\n                                                    </p>\n                                                );\n                                            }}\n                                        </Table.Cell>\n                                    </Table.Column>\n\n                                    <Table.Column width={150} resizable>\n                                        <Table.HeaderCell>\n                                            Student Name\n                                        </Table.HeaderCell>\n                                        <Table.Cell\n                                            dataKey='studentName'\n                                            resizable\n                                        />\n                                    </Table.Column>\n\n                                    <Table.Column width={150} resizable>\n                                        <Table.HeaderCell>\n                                            Status\n                                        </Table.HeaderCell>\n                                        <Table.Cell style={{ color: 'red' }}>\n                                            {rowData => {\n                                                return rowData.status ===\n                                                    'new' ? (\n                                                    <p id='status' style={{ color: 'red' }}>\n                                                        Pending Review\n                                                    </p>\n                                                ) : (\n                                                    <p\n                                                        id='status'\n                                                        style={{\n                                                            color: 'Green'\n                                                        }}>\n                                                        Reviewed\n                                                    </p>\n                                                );\n                                            }}\n                                        </Table.Cell>\n                                    </Table.Column>\n\n                                    <Table.Column\n                                        width={100}\n                                        resizable\n                                        fixed='right'>\n                                        <Table.HeaderCell>\n                                            Action\n                                        </Table.HeaderCell>\n                                        <Table.Cell>\n                                            {rowData => {\n                                                return (\n                                                    <Button\n                                                        id='reviewBtn'\n                                                        onClick={() =>\n                                                            this.reviewAssignment(\n                                                                rowData\n                                                            )\n                                                        }>\n                                                        Review\n                                                    </Button>\n                                                );\n                                            }}\n                                        </Table.Cell>\n                                    </Table.Column>\n                                </Table>\n                            </Panel>\n                        </>\n                    );\n                })}\n            </Container>\n        );\n    }\n}\n","import React from 'react';\nimport AnnouncementsPanel from '../../../../Announcements/AnnouncementsPanel';\nimport mainTemplate from '../../../../Templates/MainTemplate';\nimport { Breadcrumb } from 'rsuite';\nimport Body from './Body';\nimport withCourse from '../../../Context/withCourse';\nimport { NavLink } from 'react-router-dom';\nimport { withAuthorization } from '../../../../Session';\nimport { compose } from 'recompose';\n\nconst Header = (props) => (\n    <div>\n        <div style ={{position: 'absolute', right: 18, top: 10}}>\n            <AnnouncementsPanel {...props}/>\n        </div>\n    </div>\n)\n\nconst BreadCrumb = (props) => (\n    <Breadcrumb style={{fontSize: '12px'}}>\n        <NavLink to=\"/dashboard\">Dashboard</NavLink>\n        <Breadcrumb.Item active>Student Submissions</Breadcrumb.Item>\n    </Breadcrumb>\n)\n\nconst body = (props) => {\n    return(\n        <div>\n            <div>\n                <Body {...props}/>\n            </div>\n        </div>\n    )\n}\n\n\n\nconst WrappedComponents = mainTemplate(Header, BreadCrumb, body);\nconst condition = authUser => authUser && !!(authUser.roles.userRole === 'admin');\n\nexport default compose(withCourse, withAuthorization(condition))(WrappedComponents);\n","import 'rsuite/dist/styles/rsuite-default.css';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\n\nimport React from 'react';\nimport { Route, BrowserRouter as Router } from 'react-router-dom';\n\nimport Login from './Components/Login/';\nimport HomePage from './Components/LandingPage/HomePage.js';\nimport SignUp from './Components/Signup';\nimport Dashboard from './Components/Dashboard';\n\nimport { withAuthentication } from './Components/Session';\nimport AddCourses from './Components/Courses/AddCourses';\nimport EditCourses from './Components/Courses/EditCourses';\nimport CoursePage from './Components/Courses/CoursePage';\nimport CurriculumPage from './Components/Courses/CoursePage/Curriculum/CurriculumPage';\nimport Announcement from './Components/Announcements/AddAnnouncement';\nimport AllCourses from './Components/Courses/AllCourses';\nimport AssignmentPage from './Components/Courses/CoursePage/Assignment/AssignmentPage';\nimport AdminSubmission from './Components/Courses/CoursePage/Assignment/AdminSubmission';\n\nconst App = () => (\n    <Router>\n        <div>\n            <Route exact path='/' component={HomePage} />\n            <Route exact path='/login' component={Login} />\n            <Route exact path='/signup' component={SignUp} />\n            <Route exact path='/dashboard' component={Dashboard} />\n            <Route exact path='/courses' component={AllCourses} />\n            <Route exact path='/course/add' component={AddCourses} />\n            <Route exact path='/announcement/add' component={Announcement} />\n            <Route exact path='/course/edit/:id' component={EditCourses} />\n            <Route exact path='/courses/:id' component={CoursePage} />\n            <Route exact path='/submissions' component={AdminSubmission} />\n            <Route\n                exact\n                path='/courses/:id/curriculum/:id'\n                component={CurriculumPage}\n            />\n            <Route\n                exact\n                path='/courses/:id/assignment/:id'\n                component={AssignmentPage}\n            />\n        </div>\n    </Router>\n);\n\nexport default withAuthentication(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Firebase, { FirebaseContext } from './Components/Firebase';\n\nReactDOM.render(\n  <FirebaseContext.Provider value={new Firebase()}>\n    <App/>\n  </FirebaseContext.Provider>,\n  document.getElementById('root'),\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}